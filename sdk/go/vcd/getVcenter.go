// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetVcenter(ctx *pulumi.Context, args *GetVcenterArgs, opts ...pulumi.InvokeOption) (*GetVcenterResult, error) {
	var rv GetVcenterResult
	err := ctx.Invoke("vcd:index/getVcenter:getVcenter", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVcenter.
type GetVcenterArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by getVcenter.
type GetVcenterResult struct {
	ConnectionStatus string `pulumi:"connectionStatus"`
	// The provider-assigned unique ID for this managed resource.
	Id             string `pulumi:"id"`
	IsEnabled      bool   `pulumi:"isEnabled"`
	Name           string `pulumi:"name"`
	Status         string `pulumi:"status"`
	VcenterHost    string `pulumi:"vcenterHost"`
	VcenterVersion string `pulumi:"vcenterVersion"`
}

func GetVcenterOutput(ctx *pulumi.Context, args GetVcenterOutputArgs, opts ...pulumi.InvokeOption) GetVcenterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVcenterResult, error) {
			args := v.(GetVcenterArgs)
			r, err := GetVcenter(ctx, &args, opts...)
			var s GetVcenterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVcenterResultOutput)
}

// A collection of arguments for invoking getVcenter.
type GetVcenterOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetVcenterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVcenterArgs)(nil)).Elem()
}

// A collection of values returned by getVcenter.
type GetVcenterResultOutput struct{ *pulumi.OutputState }

func (GetVcenterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVcenterResult)(nil)).Elem()
}

func (o GetVcenterResultOutput) ToGetVcenterResultOutput() GetVcenterResultOutput {
	return o
}

func (o GetVcenterResultOutput) ToGetVcenterResultOutputWithContext(ctx context.Context) GetVcenterResultOutput {
	return o
}

func (o GetVcenterResultOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcenterResult) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVcenterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcenterResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVcenterResultOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVcenterResult) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

func (o GetVcenterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcenterResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVcenterResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcenterResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetVcenterResultOutput) VcenterHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcenterResult) string { return v.VcenterHost }).(pulumi.StringOutput)
}

func (o GetVcenterResultOutput) VcenterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetVcenterResult) string { return v.VcenterVersion }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVcenterResultOutput{})
}
