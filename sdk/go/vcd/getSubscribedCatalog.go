// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSubscribedCatalog(ctx *pulumi.Context, args *LookupSubscribedCatalogArgs, opts ...pulumi.InvokeOption) (*LookupSubscribedCatalogResult, error) {
	var rv LookupSubscribedCatalogResult
	err := ctx.Invoke("vcd:index/getSubscribedCatalog:getSubscribedCatalog", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubscribedCatalog.
type LookupSubscribedCatalogArgs struct {
	Filter *GetSubscribedCatalogFilter `pulumi:"filter"`
	Name   string                      `pulumi:"name"`
	Org    *string                     `pulumi:"org"`
}

// A collection of values returned by getSubscribedCatalog.
type LookupSubscribedCatalogResult struct {
	CatalogVersion int                         `pulumi:"catalogVersion"`
	Created        string                      `pulumi:"created"`
	Description    string                      `pulumi:"description"`
	FailedTasks    []string                    `pulumi:"failedTasks"`
	Filter         *GetSubscribedCatalogFilter `pulumi:"filter"`
	Href           string                      `pulumi:"href"`
	// The provider-assigned unique ID for this managed resource.
	Id                      string   `pulumi:"id"`
	IsLocal                 bool     `pulumi:"isLocal"`
	IsPublished             bool     `pulumi:"isPublished"`
	IsShared                bool     `pulumi:"isShared"`
	MakeLocalCopy           bool     `pulumi:"makeLocalCopy"`
	MediaItemLists          []string `pulumi:"mediaItemLists"`
	Name                    string   `pulumi:"name"`
	NumberOfMedia           int      `pulumi:"numberOfMedia"`
	NumberOfVappTemplates   int      `pulumi:"numberOfVappTemplates"`
	Org                     *string  `pulumi:"org"`
	OwnerName               string   `pulumi:"ownerName"`
	PublishSubscriptionType string   `pulumi:"publishSubscriptionType"`
	RunningTasks            []string `pulumi:"runningTasks"`
	StorageProfileId        string   `pulumi:"storageProfileId"`
	SubscriptionUrl         string   `pulumi:"subscriptionUrl"`
	VappTemplateLists       []string `pulumi:"vappTemplateLists"`
}

func LookupSubscribedCatalogOutput(ctx *pulumi.Context, args LookupSubscribedCatalogOutputArgs, opts ...pulumi.InvokeOption) LookupSubscribedCatalogResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSubscribedCatalogResult, error) {
			args := v.(LookupSubscribedCatalogArgs)
			r, err := LookupSubscribedCatalog(ctx, &args, opts...)
			var s LookupSubscribedCatalogResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSubscribedCatalogResultOutput)
}

// A collection of arguments for invoking getSubscribedCatalog.
type LookupSubscribedCatalogOutputArgs struct {
	Filter GetSubscribedCatalogFilterPtrInput `pulumi:"filter"`
	Name   pulumi.StringInput                 `pulumi:"name"`
	Org    pulumi.StringPtrInput              `pulumi:"org"`
}

func (LookupSubscribedCatalogOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubscribedCatalogArgs)(nil)).Elem()
}

// A collection of values returned by getSubscribedCatalog.
type LookupSubscribedCatalogResultOutput struct{ *pulumi.OutputState }

func (LookupSubscribedCatalogResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubscribedCatalogResult)(nil)).Elem()
}

func (o LookupSubscribedCatalogResultOutput) ToLookupSubscribedCatalogResultOutput() LookupSubscribedCatalogResultOutput {
	return o
}

func (o LookupSubscribedCatalogResultOutput) ToLookupSubscribedCatalogResultOutputWithContext(ctx context.Context) LookupSubscribedCatalogResultOutput {
	return o
}

func (o LookupSubscribedCatalogResultOutput) CatalogVersion() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) int { return v.CatalogVersion }).(pulumi.IntOutput)
}

func (o LookupSubscribedCatalogResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) string { return v.Created }).(pulumi.StringOutput)
}

func (o LookupSubscribedCatalogResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupSubscribedCatalogResultOutput) FailedTasks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) []string { return v.FailedTasks }).(pulumi.StringArrayOutput)
}

func (o LookupSubscribedCatalogResultOutput) Filter() GetSubscribedCatalogFilterPtrOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) *GetSubscribedCatalogFilter { return v.Filter }).(GetSubscribedCatalogFilterPtrOutput)
}

func (o LookupSubscribedCatalogResultOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) string { return v.Href }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSubscribedCatalogResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSubscribedCatalogResultOutput) IsLocal() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) bool { return v.IsLocal }).(pulumi.BoolOutput)
}

func (o LookupSubscribedCatalogResultOutput) IsPublished() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) bool { return v.IsPublished }).(pulumi.BoolOutput)
}

func (o LookupSubscribedCatalogResultOutput) IsShared() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) bool { return v.IsShared }).(pulumi.BoolOutput)
}

func (o LookupSubscribedCatalogResultOutput) MakeLocalCopy() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) bool { return v.MakeLocalCopy }).(pulumi.BoolOutput)
}

func (o LookupSubscribedCatalogResultOutput) MediaItemLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) []string { return v.MediaItemLists }).(pulumi.StringArrayOutput)
}

func (o LookupSubscribedCatalogResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSubscribedCatalogResultOutput) NumberOfMedia() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) int { return v.NumberOfMedia }).(pulumi.IntOutput)
}

func (o LookupSubscribedCatalogResultOutput) NumberOfVappTemplates() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) int { return v.NumberOfVappTemplates }).(pulumi.IntOutput)
}

func (o LookupSubscribedCatalogResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o LookupSubscribedCatalogResultOutput) OwnerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) string { return v.OwnerName }).(pulumi.StringOutput)
}

func (o LookupSubscribedCatalogResultOutput) PublishSubscriptionType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) string { return v.PublishSubscriptionType }).(pulumi.StringOutput)
}

func (o LookupSubscribedCatalogResultOutput) RunningTasks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) []string { return v.RunningTasks }).(pulumi.StringArrayOutput)
}

func (o LookupSubscribedCatalogResultOutput) StorageProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) string { return v.StorageProfileId }).(pulumi.StringOutput)
}

func (o LookupSubscribedCatalogResultOutput) SubscriptionUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) string { return v.SubscriptionUrl }).(pulumi.StringOutput)
}

func (o LookupSubscribedCatalogResultOutput) VappTemplateLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSubscribedCatalogResult) []string { return v.VappTemplateLists }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSubscribedCatalogResultOutput{})
}
