// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Catalog struct {
	pulumi.CustomResourceState

	// True enables early catalog export to optimize synchronization
	CacheEnabled pulumi.BoolPtrOutput `pulumi:"cacheEnabled"`
	// Catalog version number.
	CatalogVersion pulumi.IntOutput `pulumi:"catalogVersion"`
	// Time stamp of when the catalog was created
	Created pulumi.StringOutput `pulumi:"created"`
	// When destroying use delete_force=True with delete_recursive=True to remove a catalog and any objects it contains,
	// regardless of their state.
	DeleteForce pulumi.BoolOutput `pulumi:"deleteForce"`
	// When destroying use delete_recursive=True to remove the catalog and any objects it contains that are in a state that
	// normally allows removal.
	DeleteRecursive pulumi.BoolOutput      `pulumi:"deleteRecursive"`
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	// Catalog HREF
	Href pulumi.StringOutput `pulumi:"href"`
	// True if this catalog belongs to the current organization.
	IsLocal pulumi.BoolOutput `pulumi:"isLocal"`
	// True if this catalog is published.
	IsPublished pulumi.BoolOutput `pulumi:"isPublished"`
	// True if this catalog is shared.
	IsShared pulumi.BoolOutput `pulumi:"isShared"`
	// List of Media items in this catalog
	MediaItemLists pulumi.StringArrayOutput `pulumi:"mediaItemLists"`
	// Key and value pairs for catalog metadata.
	//
	// Deprecated: Use metadata_entry instead
	Metadata pulumi.MapOutput `pulumi:"metadata"`
	// Metadata entries for the given Catalog
	MetadataEntries CatalogMetadataEntryArrayOutput `pulumi:"metadataEntries"`
	Name            pulumi.StringOutput             `pulumi:"name"`
	// Number of Medias this catalog contains.
	NumberOfMedia pulumi.IntOutput `pulumi:"numberOfMedia"`
	// Number of vApps templates this catalog contains.
	NumberOfVappTemplates pulumi.IntOutput `pulumi:"numberOfVappTemplates"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrOutput `pulumi:"org"`
	// Owner name from the catalog.
	OwnerName pulumi.StringOutput `pulumi:"ownerName"`
	// An optional password to access the catalog. Only ASCII characters are allowed in a valid password.
	Password pulumi.StringOutput `pulumi:"password"`
	// Include BIOS UUIDs and MAC addresses in the downloaded OVF package. Preserving the identity information limits the
	// portability of the package and you should use it only when necessary.
	PreserveIdentityInformation pulumi.BoolPtrOutput `pulumi:"preserveIdentityInformation"`
	// True allows to publish a catalog externally to make its vApp templates and media files available for subscription by
	// organizations outside the Cloud Director installation.
	PublishEnabled pulumi.BoolPtrOutput `pulumi:"publishEnabled"`
	// PUBLISHED if published externally, SUBSCRIBED if subscribed to an external catalog, UNPUBLISHED otherwise.
	PublishSubscriptionType pulumi.StringOutput `pulumi:"publishSubscriptionType"`
	// URL to which other catalogs can subscribe
	PublishSubscriptionUrl pulumi.StringOutput `pulumi:"publishSubscriptionUrl"`
	// Optional storage profile ID
	StorageProfileId pulumi.StringPtrOutput `pulumi:"storageProfileId"`
	// List of catalog items in this catalog
	VappTemplateLists pulumi.StringArrayOutput `pulumi:"vappTemplateLists"`
}

// NewCatalog registers a new resource with the given unique name, arguments, and options.
func NewCatalog(ctx *pulumi.Context,
	name string, args *CatalogArgs, opts ...pulumi.ResourceOption) (*Catalog, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeleteForce == nil {
		return nil, errors.New("invalid value for required argument 'DeleteForce'")
	}
	if args.DeleteRecursive == nil {
		return nil, errors.New("invalid value for required argument 'DeleteRecursive'")
	}
	var resource Catalog
	err := ctx.RegisterResource("vcd:index/catalog:Catalog", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCatalog gets an existing Catalog resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCatalog(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CatalogState, opts ...pulumi.ResourceOption) (*Catalog, error) {
	var resource Catalog
	err := ctx.ReadResource("vcd:index/catalog:Catalog", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Catalog resources.
type catalogState struct {
	// True enables early catalog export to optimize synchronization
	CacheEnabled *bool `pulumi:"cacheEnabled"`
	// Catalog version number.
	CatalogVersion *int `pulumi:"catalogVersion"`
	// Time stamp of when the catalog was created
	Created *string `pulumi:"created"`
	// When destroying use delete_force=True with delete_recursive=True to remove a catalog and any objects it contains,
	// regardless of their state.
	DeleteForce *bool `pulumi:"deleteForce"`
	// When destroying use delete_recursive=True to remove the catalog and any objects it contains that are in a state that
	// normally allows removal.
	DeleteRecursive *bool   `pulumi:"deleteRecursive"`
	Description     *string `pulumi:"description"`
	// Catalog HREF
	Href *string `pulumi:"href"`
	// True if this catalog belongs to the current organization.
	IsLocal *bool `pulumi:"isLocal"`
	// True if this catalog is published.
	IsPublished *bool `pulumi:"isPublished"`
	// True if this catalog is shared.
	IsShared *bool `pulumi:"isShared"`
	// List of Media items in this catalog
	MediaItemLists []string `pulumi:"mediaItemLists"`
	// Key and value pairs for catalog metadata.
	//
	// Deprecated: Use metadata_entry instead
	Metadata map[string]interface{} `pulumi:"metadata"`
	// Metadata entries for the given Catalog
	MetadataEntries []CatalogMetadataEntry `pulumi:"metadataEntries"`
	Name            *string                `pulumi:"name"`
	// Number of Medias this catalog contains.
	NumberOfMedia *int `pulumi:"numberOfMedia"`
	// Number of vApps templates this catalog contains.
	NumberOfVappTemplates *int `pulumi:"numberOfVappTemplates"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org *string `pulumi:"org"`
	// Owner name from the catalog.
	OwnerName *string `pulumi:"ownerName"`
	// An optional password to access the catalog. Only ASCII characters are allowed in a valid password.
	Password *string `pulumi:"password"`
	// Include BIOS UUIDs and MAC addresses in the downloaded OVF package. Preserving the identity information limits the
	// portability of the package and you should use it only when necessary.
	PreserveIdentityInformation *bool `pulumi:"preserveIdentityInformation"`
	// True allows to publish a catalog externally to make its vApp templates and media files available for subscription by
	// organizations outside the Cloud Director installation.
	PublishEnabled *bool `pulumi:"publishEnabled"`
	// PUBLISHED if published externally, SUBSCRIBED if subscribed to an external catalog, UNPUBLISHED otherwise.
	PublishSubscriptionType *string `pulumi:"publishSubscriptionType"`
	// URL to which other catalogs can subscribe
	PublishSubscriptionUrl *string `pulumi:"publishSubscriptionUrl"`
	// Optional storage profile ID
	StorageProfileId *string `pulumi:"storageProfileId"`
	// List of catalog items in this catalog
	VappTemplateLists []string `pulumi:"vappTemplateLists"`
}

type CatalogState struct {
	// True enables early catalog export to optimize synchronization
	CacheEnabled pulumi.BoolPtrInput
	// Catalog version number.
	CatalogVersion pulumi.IntPtrInput
	// Time stamp of when the catalog was created
	Created pulumi.StringPtrInput
	// When destroying use delete_force=True with delete_recursive=True to remove a catalog and any objects it contains,
	// regardless of their state.
	DeleteForce pulumi.BoolPtrInput
	// When destroying use delete_recursive=True to remove the catalog and any objects it contains that are in a state that
	// normally allows removal.
	DeleteRecursive pulumi.BoolPtrInput
	Description     pulumi.StringPtrInput
	// Catalog HREF
	Href pulumi.StringPtrInput
	// True if this catalog belongs to the current organization.
	IsLocal pulumi.BoolPtrInput
	// True if this catalog is published.
	IsPublished pulumi.BoolPtrInput
	// True if this catalog is shared.
	IsShared pulumi.BoolPtrInput
	// List of Media items in this catalog
	MediaItemLists pulumi.StringArrayInput
	// Key and value pairs for catalog metadata.
	//
	// Deprecated: Use metadata_entry instead
	Metadata pulumi.MapInput
	// Metadata entries for the given Catalog
	MetadataEntries CatalogMetadataEntryArrayInput
	Name            pulumi.StringPtrInput
	// Number of Medias this catalog contains.
	NumberOfMedia pulumi.IntPtrInput
	// Number of vApps templates this catalog contains.
	NumberOfVappTemplates pulumi.IntPtrInput
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrInput
	// Owner name from the catalog.
	OwnerName pulumi.StringPtrInput
	// An optional password to access the catalog. Only ASCII characters are allowed in a valid password.
	Password pulumi.StringPtrInput
	// Include BIOS UUIDs and MAC addresses in the downloaded OVF package. Preserving the identity information limits the
	// portability of the package and you should use it only when necessary.
	PreserveIdentityInformation pulumi.BoolPtrInput
	// True allows to publish a catalog externally to make its vApp templates and media files available for subscription by
	// organizations outside the Cloud Director installation.
	PublishEnabled pulumi.BoolPtrInput
	// PUBLISHED if published externally, SUBSCRIBED if subscribed to an external catalog, UNPUBLISHED otherwise.
	PublishSubscriptionType pulumi.StringPtrInput
	// URL to which other catalogs can subscribe
	PublishSubscriptionUrl pulumi.StringPtrInput
	// Optional storage profile ID
	StorageProfileId pulumi.StringPtrInput
	// List of catalog items in this catalog
	VappTemplateLists pulumi.StringArrayInput
}

func (CatalogState) ElementType() reflect.Type {
	return reflect.TypeOf((*catalogState)(nil)).Elem()
}

type catalogArgs struct {
	// True enables early catalog export to optimize synchronization
	CacheEnabled *bool `pulumi:"cacheEnabled"`
	// When destroying use delete_force=True with delete_recursive=True to remove a catalog and any objects it contains,
	// regardless of their state.
	DeleteForce bool `pulumi:"deleteForce"`
	// When destroying use delete_recursive=True to remove the catalog and any objects it contains that are in a state that
	// normally allows removal.
	DeleteRecursive bool    `pulumi:"deleteRecursive"`
	Description     *string `pulumi:"description"`
	// Key and value pairs for catalog metadata.
	//
	// Deprecated: Use metadata_entry instead
	Metadata map[string]interface{} `pulumi:"metadata"`
	// Metadata entries for the given Catalog
	MetadataEntries []CatalogMetadataEntry `pulumi:"metadataEntries"`
	Name            *string                `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org *string `pulumi:"org"`
	// An optional password to access the catalog. Only ASCII characters are allowed in a valid password.
	Password *string `pulumi:"password"`
	// Include BIOS UUIDs and MAC addresses in the downloaded OVF package. Preserving the identity information limits the
	// portability of the package and you should use it only when necessary.
	PreserveIdentityInformation *bool `pulumi:"preserveIdentityInformation"`
	// True allows to publish a catalog externally to make its vApp templates and media files available for subscription by
	// organizations outside the Cloud Director installation.
	PublishEnabled *bool `pulumi:"publishEnabled"`
	// Optional storage profile ID
	StorageProfileId *string `pulumi:"storageProfileId"`
}

// The set of arguments for constructing a Catalog resource.
type CatalogArgs struct {
	// True enables early catalog export to optimize synchronization
	CacheEnabled pulumi.BoolPtrInput
	// When destroying use delete_force=True with delete_recursive=True to remove a catalog and any objects it contains,
	// regardless of their state.
	DeleteForce pulumi.BoolInput
	// When destroying use delete_recursive=True to remove the catalog and any objects it contains that are in a state that
	// normally allows removal.
	DeleteRecursive pulumi.BoolInput
	Description     pulumi.StringPtrInput
	// Key and value pairs for catalog metadata.
	//
	// Deprecated: Use metadata_entry instead
	Metadata pulumi.MapInput
	// Metadata entries for the given Catalog
	MetadataEntries CatalogMetadataEntryArrayInput
	Name            pulumi.StringPtrInput
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrInput
	// An optional password to access the catalog. Only ASCII characters are allowed in a valid password.
	Password pulumi.StringPtrInput
	// Include BIOS UUIDs and MAC addresses in the downloaded OVF package. Preserving the identity information limits the
	// portability of the package and you should use it only when necessary.
	PreserveIdentityInformation pulumi.BoolPtrInput
	// True allows to publish a catalog externally to make its vApp templates and media files available for subscription by
	// organizations outside the Cloud Director installation.
	PublishEnabled pulumi.BoolPtrInput
	// Optional storage profile ID
	StorageProfileId pulumi.StringPtrInput
}

func (CatalogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*catalogArgs)(nil)).Elem()
}

type CatalogInput interface {
	pulumi.Input

	ToCatalogOutput() CatalogOutput
	ToCatalogOutputWithContext(ctx context.Context) CatalogOutput
}

func (*Catalog) ElementType() reflect.Type {
	return reflect.TypeOf((**Catalog)(nil)).Elem()
}

func (i *Catalog) ToCatalogOutput() CatalogOutput {
	return i.ToCatalogOutputWithContext(context.Background())
}

func (i *Catalog) ToCatalogOutputWithContext(ctx context.Context) CatalogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogOutput)
}

// CatalogArrayInput is an input type that accepts CatalogArray and CatalogArrayOutput values.
// You can construct a concrete instance of `CatalogArrayInput` via:
//
//	CatalogArray{ CatalogArgs{...} }
type CatalogArrayInput interface {
	pulumi.Input

	ToCatalogArrayOutput() CatalogArrayOutput
	ToCatalogArrayOutputWithContext(context.Context) CatalogArrayOutput
}

type CatalogArray []CatalogInput

func (CatalogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Catalog)(nil)).Elem()
}

func (i CatalogArray) ToCatalogArrayOutput() CatalogArrayOutput {
	return i.ToCatalogArrayOutputWithContext(context.Background())
}

func (i CatalogArray) ToCatalogArrayOutputWithContext(ctx context.Context) CatalogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogArrayOutput)
}

// CatalogMapInput is an input type that accepts CatalogMap and CatalogMapOutput values.
// You can construct a concrete instance of `CatalogMapInput` via:
//
//	CatalogMap{ "key": CatalogArgs{...} }
type CatalogMapInput interface {
	pulumi.Input

	ToCatalogMapOutput() CatalogMapOutput
	ToCatalogMapOutputWithContext(context.Context) CatalogMapOutput
}

type CatalogMap map[string]CatalogInput

func (CatalogMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Catalog)(nil)).Elem()
}

func (i CatalogMap) ToCatalogMapOutput() CatalogMapOutput {
	return i.ToCatalogMapOutputWithContext(context.Background())
}

func (i CatalogMap) ToCatalogMapOutputWithContext(ctx context.Context) CatalogMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogMapOutput)
}

type CatalogOutput struct{ *pulumi.OutputState }

func (CatalogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Catalog)(nil)).Elem()
}

func (o CatalogOutput) ToCatalogOutput() CatalogOutput {
	return o
}

func (o CatalogOutput) ToCatalogOutputWithContext(ctx context.Context) CatalogOutput {
	return o
}

// True enables early catalog export to optimize synchronization
func (o CatalogOutput) CacheEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Catalog) pulumi.BoolPtrOutput { return v.CacheEnabled }).(pulumi.BoolPtrOutput)
}

// Catalog version number.
func (o CatalogOutput) CatalogVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *Catalog) pulumi.IntOutput { return v.CatalogVersion }).(pulumi.IntOutput)
}

// Time stamp of when the catalog was created
func (o CatalogOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringOutput { return v.Created }).(pulumi.StringOutput)
}

// When destroying use delete_force=True with delete_recursive=True to remove a catalog and any objects it contains,
// regardless of their state.
func (o CatalogOutput) DeleteForce() pulumi.BoolOutput {
	return o.ApplyT(func(v *Catalog) pulumi.BoolOutput { return v.DeleteForce }).(pulumi.BoolOutput)
}

// When destroying use delete_recursive=True to remove the catalog and any objects it contains that are in a state that
// normally allows removal.
func (o CatalogOutput) DeleteRecursive() pulumi.BoolOutput {
	return o.ApplyT(func(v *Catalog) pulumi.BoolOutput { return v.DeleteRecursive }).(pulumi.BoolOutput)
}

func (o CatalogOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Catalog HREF
func (o CatalogOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringOutput { return v.Href }).(pulumi.StringOutput)
}

// True if this catalog belongs to the current organization.
func (o CatalogOutput) IsLocal() pulumi.BoolOutput {
	return o.ApplyT(func(v *Catalog) pulumi.BoolOutput { return v.IsLocal }).(pulumi.BoolOutput)
}

// True if this catalog is published.
func (o CatalogOutput) IsPublished() pulumi.BoolOutput {
	return o.ApplyT(func(v *Catalog) pulumi.BoolOutput { return v.IsPublished }).(pulumi.BoolOutput)
}

// True if this catalog is shared.
func (o CatalogOutput) IsShared() pulumi.BoolOutput {
	return o.ApplyT(func(v *Catalog) pulumi.BoolOutput { return v.IsShared }).(pulumi.BoolOutput)
}

// List of Media items in this catalog
func (o CatalogOutput) MediaItemLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringArrayOutput { return v.MediaItemLists }).(pulumi.StringArrayOutput)
}

// Key and value pairs for catalog metadata.
//
// Deprecated: Use metadata_entry instead
func (o CatalogOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v *Catalog) pulumi.MapOutput { return v.Metadata }).(pulumi.MapOutput)
}

// Metadata entries for the given Catalog
func (o CatalogOutput) MetadataEntries() CatalogMetadataEntryArrayOutput {
	return o.ApplyT(func(v *Catalog) CatalogMetadataEntryArrayOutput { return v.MetadataEntries }).(CatalogMetadataEntryArrayOutput)
}

func (o CatalogOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Number of Medias this catalog contains.
func (o CatalogOutput) NumberOfMedia() pulumi.IntOutput {
	return o.ApplyT(func(v *Catalog) pulumi.IntOutput { return v.NumberOfMedia }).(pulumi.IntOutput)
}

// Number of vApps templates this catalog contains.
func (o CatalogOutput) NumberOfVappTemplates() pulumi.IntOutput {
	return o.ApplyT(func(v *Catalog) pulumi.IntOutput { return v.NumberOfVappTemplates }).(pulumi.IntOutput)
}

// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
// different organizations
func (o CatalogOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringPtrOutput { return v.Org }).(pulumi.StringPtrOutput)
}

// Owner name from the catalog.
func (o CatalogOutput) OwnerName() pulumi.StringOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringOutput { return v.OwnerName }).(pulumi.StringOutput)
}

// An optional password to access the catalog. Only ASCII characters are allowed in a valid password.
func (o CatalogOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Include BIOS UUIDs and MAC addresses in the downloaded OVF package. Preserving the identity information limits the
// portability of the package and you should use it only when necessary.
func (o CatalogOutput) PreserveIdentityInformation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Catalog) pulumi.BoolPtrOutput { return v.PreserveIdentityInformation }).(pulumi.BoolPtrOutput)
}

// True allows to publish a catalog externally to make its vApp templates and media files available for subscription by
// organizations outside the Cloud Director installation.
func (o CatalogOutput) PublishEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Catalog) pulumi.BoolPtrOutput { return v.PublishEnabled }).(pulumi.BoolPtrOutput)
}

// PUBLISHED if published externally, SUBSCRIBED if subscribed to an external catalog, UNPUBLISHED otherwise.
func (o CatalogOutput) PublishSubscriptionType() pulumi.StringOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringOutput { return v.PublishSubscriptionType }).(pulumi.StringOutput)
}

// URL to which other catalogs can subscribe
func (o CatalogOutput) PublishSubscriptionUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringOutput { return v.PublishSubscriptionUrl }).(pulumi.StringOutput)
}

// Optional storage profile ID
func (o CatalogOutput) StorageProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringPtrOutput { return v.StorageProfileId }).(pulumi.StringPtrOutput)
}

// List of catalog items in this catalog
func (o CatalogOutput) VappTemplateLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Catalog) pulumi.StringArrayOutput { return v.VappTemplateLists }).(pulumi.StringArrayOutput)
}

type CatalogArrayOutput struct{ *pulumi.OutputState }

func (CatalogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Catalog)(nil)).Elem()
}

func (o CatalogArrayOutput) ToCatalogArrayOutput() CatalogArrayOutput {
	return o
}

func (o CatalogArrayOutput) ToCatalogArrayOutputWithContext(ctx context.Context) CatalogArrayOutput {
	return o
}

func (o CatalogArrayOutput) Index(i pulumi.IntInput) CatalogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Catalog {
		return vs[0].([]*Catalog)[vs[1].(int)]
	}).(CatalogOutput)
}

type CatalogMapOutput struct{ *pulumi.OutputState }

func (CatalogMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Catalog)(nil)).Elem()
}

func (o CatalogMapOutput) ToCatalogMapOutput() CatalogMapOutput {
	return o
}

func (o CatalogMapOutput) ToCatalogMapOutputWithContext(ctx context.Context) CatalogMapOutput {
	return o
}

func (o CatalogMapOutput) MapIndex(k pulumi.StringInput) CatalogOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Catalog {
		return vs[0].(map[string]*Catalog)[vs[1].(string)]
	}).(CatalogOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogInput)(nil)).Elem(), &Catalog{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogArrayInput)(nil)).Elem(), CatalogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogMapInput)(nil)).Elem(), CatalogMap{})
	pulumi.RegisterOutputType(CatalogOutput{})
	pulumi.RegisterOutputType(CatalogArrayOutput{})
	pulumi.RegisterOutputType(CatalogMapOutput{})
}
