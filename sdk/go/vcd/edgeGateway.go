// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EdgeGateway struct {
	pulumi.CustomResourceState

	// Configuration of the vShield edge VM for this gateway. One of: compact, full ("Large"), full4 ("Quad Large"), x-large
	Configuration pulumi.StringOutput `pulumi:"configuration"`
	// IP address of edge gateway interface which is used as default.
	DefaultExternalNetworkIp pulumi.StringOutput    `pulumi:"defaultExternalNetworkIp"`
	Description              pulumi.StringPtrOutput `pulumi:"description"`
	// Enable distributed routing
	DistributedRouting pulumi.BoolPtrOutput `pulumi:"distributedRouting"`
	// List of IP addresses set on edge gateway external network interfaces
	ExternalNetworkIps pulumi.StringArrayOutput `pulumi:"externalNetworkIps"`
	// One or more blocks with external network information to be attached to this gateway's interface
	ExternalNetworks EdgeGatewayExternalNetworkArrayOutput `pulumi:"externalNetworks"`
	// Enable FIPS mode. FIPS mode turns on the cipher suites that comply with FIPS. (False by default)
	FipsModeEnabled pulumi.BoolPtrOutput `pulumi:"fipsModeEnabled"`
	// 'accept' or 'deny'. Default 'deny'
	FwDefaultRuleAction pulumi.StringPtrOutput `pulumi:"fwDefaultRuleAction"`
	// Enable logging for default rule. Default 'false'
	FwDefaultRuleLoggingEnabled pulumi.BoolPtrOutput `pulumi:"fwDefaultRuleLoggingEnabled"`
	// Enable firewall. Default 'true'
	FwEnabled pulumi.BoolPtrOutput `pulumi:"fwEnabled"`
	// Enable high availability on this edge gateway
	HaEnabled pulumi.BoolPtrOutput `pulumi:"haEnabled"`
	// Enable load balancer acceleration. (Disabled by default)
	LbAccelerationEnabled pulumi.BoolPtrOutput `pulumi:"lbAccelerationEnabled"`
	// Enable load balancing. (Disabled by default)
	LbEnabled pulumi.BoolPtrOutput `pulumi:"lbEnabled"`
	// Enable load balancer logging. (Disabled by default)
	LbLoggingEnabled pulumi.BoolPtrOutput `pulumi:"lbLoggingEnabled"`
	// Log level. One of 'emergency', 'alert', 'critical', 'error', 'warning', 'notice', 'info', 'debug'. ('info' by default)
	LbLoglevel pulumi.StringPtrOutput `pulumi:"lbLoglevel"`
	Name       pulumi.StringOutput    `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrOutput `pulumi:"org"`
	// If true, default gateway will be used for the edge gateways' default routing and DNS forwarding.(False by default)
	UseDefaultRouteForDnsRelay pulumi.BoolOutput `pulumi:"useDefaultRouteForDnsRelay"`
	// The name of VDC to use, optional if defined at provider level
	Vdc pulumi.StringPtrOutput `pulumi:"vdc"`
}

// NewEdgeGateway registers a new resource with the given unique name, arguments, and options.
func NewEdgeGateway(ctx *pulumi.Context,
	name string, args *EdgeGatewayArgs, opts ...pulumi.ResourceOption) (*EdgeGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.ExternalNetworks == nil {
		return nil, errors.New("invalid value for required argument 'ExternalNetworks'")
	}
	var resource EdgeGateway
	err := ctx.RegisterResource("vcd:index/edgeGateway:EdgeGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEdgeGateway gets an existing EdgeGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEdgeGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EdgeGatewayState, opts ...pulumi.ResourceOption) (*EdgeGateway, error) {
	var resource EdgeGateway
	err := ctx.ReadResource("vcd:index/edgeGateway:EdgeGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EdgeGateway resources.
type edgeGatewayState struct {
	// Configuration of the vShield edge VM for this gateway. One of: compact, full ("Large"), full4 ("Quad Large"), x-large
	Configuration *string `pulumi:"configuration"`
	// IP address of edge gateway interface which is used as default.
	DefaultExternalNetworkIp *string `pulumi:"defaultExternalNetworkIp"`
	Description              *string `pulumi:"description"`
	// Enable distributed routing
	DistributedRouting *bool `pulumi:"distributedRouting"`
	// List of IP addresses set on edge gateway external network interfaces
	ExternalNetworkIps []string `pulumi:"externalNetworkIps"`
	// One or more blocks with external network information to be attached to this gateway's interface
	ExternalNetworks []EdgeGatewayExternalNetwork `pulumi:"externalNetworks"`
	// Enable FIPS mode. FIPS mode turns on the cipher suites that comply with FIPS. (False by default)
	FipsModeEnabled *bool `pulumi:"fipsModeEnabled"`
	// 'accept' or 'deny'. Default 'deny'
	FwDefaultRuleAction *string `pulumi:"fwDefaultRuleAction"`
	// Enable logging for default rule. Default 'false'
	FwDefaultRuleLoggingEnabled *bool `pulumi:"fwDefaultRuleLoggingEnabled"`
	// Enable firewall. Default 'true'
	FwEnabled *bool `pulumi:"fwEnabled"`
	// Enable high availability on this edge gateway
	HaEnabled *bool `pulumi:"haEnabled"`
	// Enable load balancer acceleration. (Disabled by default)
	LbAccelerationEnabled *bool `pulumi:"lbAccelerationEnabled"`
	// Enable load balancing. (Disabled by default)
	LbEnabled *bool `pulumi:"lbEnabled"`
	// Enable load balancer logging. (Disabled by default)
	LbLoggingEnabled *bool `pulumi:"lbLoggingEnabled"`
	// Log level. One of 'emergency', 'alert', 'critical', 'error', 'warning', 'notice', 'info', 'debug'. ('info' by default)
	LbLoglevel *string `pulumi:"lbLoglevel"`
	Name       *string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org *string `pulumi:"org"`
	// If true, default gateway will be used for the edge gateways' default routing and DNS forwarding.(False by default)
	UseDefaultRouteForDnsRelay *bool `pulumi:"useDefaultRouteForDnsRelay"`
	// The name of VDC to use, optional if defined at provider level
	Vdc *string `pulumi:"vdc"`
}

type EdgeGatewayState struct {
	// Configuration of the vShield edge VM for this gateway. One of: compact, full ("Large"), full4 ("Quad Large"), x-large
	Configuration pulumi.StringPtrInput
	// IP address of edge gateway interface which is used as default.
	DefaultExternalNetworkIp pulumi.StringPtrInput
	Description              pulumi.StringPtrInput
	// Enable distributed routing
	DistributedRouting pulumi.BoolPtrInput
	// List of IP addresses set on edge gateway external network interfaces
	ExternalNetworkIps pulumi.StringArrayInput
	// One or more blocks with external network information to be attached to this gateway's interface
	ExternalNetworks EdgeGatewayExternalNetworkArrayInput
	// Enable FIPS mode. FIPS mode turns on the cipher suites that comply with FIPS. (False by default)
	FipsModeEnabled pulumi.BoolPtrInput
	// 'accept' or 'deny'. Default 'deny'
	FwDefaultRuleAction pulumi.StringPtrInput
	// Enable logging for default rule. Default 'false'
	FwDefaultRuleLoggingEnabled pulumi.BoolPtrInput
	// Enable firewall. Default 'true'
	FwEnabled pulumi.BoolPtrInput
	// Enable high availability on this edge gateway
	HaEnabled pulumi.BoolPtrInput
	// Enable load balancer acceleration. (Disabled by default)
	LbAccelerationEnabled pulumi.BoolPtrInput
	// Enable load balancing. (Disabled by default)
	LbEnabled pulumi.BoolPtrInput
	// Enable load balancer logging. (Disabled by default)
	LbLoggingEnabled pulumi.BoolPtrInput
	// Log level. One of 'emergency', 'alert', 'critical', 'error', 'warning', 'notice', 'info', 'debug'. ('info' by default)
	LbLoglevel pulumi.StringPtrInput
	Name       pulumi.StringPtrInput
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrInput
	// If true, default gateway will be used for the edge gateways' default routing and DNS forwarding.(False by default)
	UseDefaultRouteForDnsRelay pulumi.BoolPtrInput
	// The name of VDC to use, optional if defined at provider level
	Vdc pulumi.StringPtrInput
}

func (EdgeGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeGatewayState)(nil)).Elem()
}

type edgeGatewayArgs struct {
	// Configuration of the vShield edge VM for this gateway. One of: compact, full ("Large"), full4 ("Quad Large"), x-large
	Configuration string  `pulumi:"configuration"`
	Description   *string `pulumi:"description"`
	// Enable distributed routing
	DistributedRouting *bool `pulumi:"distributedRouting"`
	// One or more blocks with external network information to be attached to this gateway's interface
	ExternalNetworks []EdgeGatewayExternalNetwork `pulumi:"externalNetworks"`
	// Enable FIPS mode. FIPS mode turns on the cipher suites that comply with FIPS. (False by default)
	FipsModeEnabled *bool `pulumi:"fipsModeEnabled"`
	// 'accept' or 'deny'. Default 'deny'
	FwDefaultRuleAction *string `pulumi:"fwDefaultRuleAction"`
	// Enable logging for default rule. Default 'false'
	FwDefaultRuleLoggingEnabled *bool `pulumi:"fwDefaultRuleLoggingEnabled"`
	// Enable firewall. Default 'true'
	FwEnabled *bool `pulumi:"fwEnabled"`
	// Enable high availability on this edge gateway
	HaEnabled *bool `pulumi:"haEnabled"`
	// Enable load balancer acceleration. (Disabled by default)
	LbAccelerationEnabled *bool `pulumi:"lbAccelerationEnabled"`
	// Enable load balancing. (Disabled by default)
	LbEnabled *bool `pulumi:"lbEnabled"`
	// Enable load balancer logging. (Disabled by default)
	LbLoggingEnabled *bool `pulumi:"lbLoggingEnabled"`
	// Log level. One of 'emergency', 'alert', 'critical', 'error', 'warning', 'notice', 'info', 'debug'. ('info' by default)
	LbLoglevel *string `pulumi:"lbLoglevel"`
	Name       *string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org *string `pulumi:"org"`
	// If true, default gateway will be used for the edge gateways' default routing and DNS forwarding.(False by default)
	UseDefaultRouteForDnsRelay *bool `pulumi:"useDefaultRouteForDnsRelay"`
	// The name of VDC to use, optional if defined at provider level
	Vdc *string `pulumi:"vdc"`
}

// The set of arguments for constructing a EdgeGateway resource.
type EdgeGatewayArgs struct {
	// Configuration of the vShield edge VM for this gateway. One of: compact, full ("Large"), full4 ("Quad Large"), x-large
	Configuration pulumi.StringInput
	Description   pulumi.StringPtrInput
	// Enable distributed routing
	DistributedRouting pulumi.BoolPtrInput
	// One or more blocks with external network information to be attached to this gateway's interface
	ExternalNetworks EdgeGatewayExternalNetworkArrayInput
	// Enable FIPS mode. FIPS mode turns on the cipher suites that comply with FIPS. (False by default)
	FipsModeEnabled pulumi.BoolPtrInput
	// 'accept' or 'deny'. Default 'deny'
	FwDefaultRuleAction pulumi.StringPtrInput
	// Enable logging for default rule. Default 'false'
	FwDefaultRuleLoggingEnabled pulumi.BoolPtrInput
	// Enable firewall. Default 'true'
	FwEnabled pulumi.BoolPtrInput
	// Enable high availability on this edge gateway
	HaEnabled pulumi.BoolPtrInput
	// Enable load balancer acceleration. (Disabled by default)
	LbAccelerationEnabled pulumi.BoolPtrInput
	// Enable load balancing. (Disabled by default)
	LbEnabled pulumi.BoolPtrInput
	// Enable load balancer logging. (Disabled by default)
	LbLoggingEnabled pulumi.BoolPtrInput
	// Log level. One of 'emergency', 'alert', 'critical', 'error', 'warning', 'notice', 'info', 'debug'. ('info' by default)
	LbLoglevel pulumi.StringPtrInput
	Name       pulumi.StringPtrInput
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrInput
	// If true, default gateway will be used for the edge gateways' default routing and DNS forwarding.(False by default)
	UseDefaultRouteForDnsRelay pulumi.BoolPtrInput
	// The name of VDC to use, optional if defined at provider level
	Vdc pulumi.StringPtrInput
}

func (EdgeGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeGatewayArgs)(nil)).Elem()
}

type EdgeGatewayInput interface {
	pulumi.Input

	ToEdgeGatewayOutput() EdgeGatewayOutput
	ToEdgeGatewayOutputWithContext(ctx context.Context) EdgeGatewayOutput
}

func (*EdgeGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeGateway)(nil)).Elem()
}

func (i *EdgeGateway) ToEdgeGatewayOutput() EdgeGatewayOutput {
	return i.ToEdgeGatewayOutputWithContext(context.Background())
}

func (i *EdgeGateway) ToEdgeGatewayOutputWithContext(ctx context.Context) EdgeGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeGatewayOutput)
}

// EdgeGatewayArrayInput is an input type that accepts EdgeGatewayArray and EdgeGatewayArrayOutput values.
// You can construct a concrete instance of `EdgeGatewayArrayInput` via:
//
//	EdgeGatewayArray{ EdgeGatewayArgs{...} }
type EdgeGatewayArrayInput interface {
	pulumi.Input

	ToEdgeGatewayArrayOutput() EdgeGatewayArrayOutput
	ToEdgeGatewayArrayOutputWithContext(context.Context) EdgeGatewayArrayOutput
}

type EdgeGatewayArray []EdgeGatewayInput

func (EdgeGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeGateway)(nil)).Elem()
}

func (i EdgeGatewayArray) ToEdgeGatewayArrayOutput() EdgeGatewayArrayOutput {
	return i.ToEdgeGatewayArrayOutputWithContext(context.Background())
}

func (i EdgeGatewayArray) ToEdgeGatewayArrayOutputWithContext(ctx context.Context) EdgeGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeGatewayArrayOutput)
}

// EdgeGatewayMapInput is an input type that accepts EdgeGatewayMap and EdgeGatewayMapOutput values.
// You can construct a concrete instance of `EdgeGatewayMapInput` via:
//
//	EdgeGatewayMap{ "key": EdgeGatewayArgs{...} }
type EdgeGatewayMapInput interface {
	pulumi.Input

	ToEdgeGatewayMapOutput() EdgeGatewayMapOutput
	ToEdgeGatewayMapOutputWithContext(context.Context) EdgeGatewayMapOutput
}

type EdgeGatewayMap map[string]EdgeGatewayInput

func (EdgeGatewayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeGateway)(nil)).Elem()
}

func (i EdgeGatewayMap) ToEdgeGatewayMapOutput() EdgeGatewayMapOutput {
	return i.ToEdgeGatewayMapOutputWithContext(context.Background())
}

func (i EdgeGatewayMap) ToEdgeGatewayMapOutputWithContext(ctx context.Context) EdgeGatewayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgeGatewayMapOutput)
}

type EdgeGatewayOutput struct{ *pulumi.OutputState }

func (EdgeGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgeGateway)(nil)).Elem()
}

func (o EdgeGatewayOutput) ToEdgeGatewayOutput() EdgeGatewayOutput {
	return o
}

func (o EdgeGatewayOutput) ToEdgeGatewayOutputWithContext(ctx context.Context) EdgeGatewayOutput {
	return o
}

// Configuration of the vShield edge VM for this gateway. One of: compact, full ("Large"), full4 ("Quad Large"), x-large
func (o EdgeGatewayOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.StringOutput { return v.Configuration }).(pulumi.StringOutput)
}

// IP address of edge gateway interface which is used as default.
func (o EdgeGatewayOutput) DefaultExternalNetworkIp() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.StringOutput { return v.DefaultExternalNetworkIp }).(pulumi.StringOutput)
}

func (o EdgeGatewayOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Enable distributed routing
func (o EdgeGatewayOutput) DistributedRouting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.BoolPtrOutput { return v.DistributedRouting }).(pulumi.BoolPtrOutput)
}

// List of IP addresses set on edge gateway external network interfaces
func (o EdgeGatewayOutput) ExternalNetworkIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.StringArrayOutput { return v.ExternalNetworkIps }).(pulumi.StringArrayOutput)
}

// One or more blocks with external network information to be attached to this gateway's interface
func (o EdgeGatewayOutput) ExternalNetworks() EdgeGatewayExternalNetworkArrayOutput {
	return o.ApplyT(func(v *EdgeGateway) EdgeGatewayExternalNetworkArrayOutput { return v.ExternalNetworks }).(EdgeGatewayExternalNetworkArrayOutput)
}

// Enable FIPS mode. FIPS mode turns on the cipher suites that comply with FIPS. (False by default)
func (o EdgeGatewayOutput) FipsModeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.BoolPtrOutput { return v.FipsModeEnabled }).(pulumi.BoolPtrOutput)
}

// 'accept' or 'deny'. Default 'deny'
func (o EdgeGatewayOutput) FwDefaultRuleAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.StringPtrOutput { return v.FwDefaultRuleAction }).(pulumi.StringPtrOutput)
}

// Enable logging for default rule. Default 'false'
func (o EdgeGatewayOutput) FwDefaultRuleLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.BoolPtrOutput { return v.FwDefaultRuleLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Enable firewall. Default 'true'
func (o EdgeGatewayOutput) FwEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.BoolPtrOutput { return v.FwEnabled }).(pulumi.BoolPtrOutput)
}

// Enable high availability on this edge gateway
func (o EdgeGatewayOutput) HaEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.BoolPtrOutput { return v.HaEnabled }).(pulumi.BoolPtrOutput)
}

// Enable load balancer acceleration. (Disabled by default)
func (o EdgeGatewayOutput) LbAccelerationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.BoolPtrOutput { return v.LbAccelerationEnabled }).(pulumi.BoolPtrOutput)
}

// Enable load balancing. (Disabled by default)
func (o EdgeGatewayOutput) LbEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.BoolPtrOutput { return v.LbEnabled }).(pulumi.BoolPtrOutput)
}

// Enable load balancer logging. (Disabled by default)
func (o EdgeGatewayOutput) LbLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.BoolPtrOutput { return v.LbLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Log level. One of 'emergency', 'alert', 'critical', 'error', 'warning', 'notice', 'info', 'debug'. ('info' by default)
func (o EdgeGatewayOutput) LbLoglevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.StringPtrOutput { return v.LbLoglevel }).(pulumi.StringPtrOutput)
}

func (o EdgeGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
// different organizations
func (o EdgeGatewayOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.StringPtrOutput { return v.Org }).(pulumi.StringPtrOutput)
}

// If true, default gateway will be used for the edge gateways' default routing and DNS forwarding.(False by default)
func (o EdgeGatewayOutput) UseDefaultRouteForDnsRelay() pulumi.BoolOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.BoolOutput { return v.UseDefaultRouteForDnsRelay }).(pulumi.BoolOutput)
}

// The name of VDC to use, optional if defined at provider level
func (o EdgeGatewayOutput) Vdc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EdgeGateway) pulumi.StringPtrOutput { return v.Vdc }).(pulumi.StringPtrOutput)
}

type EdgeGatewayArrayOutput struct{ *pulumi.OutputState }

func (EdgeGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EdgeGateway)(nil)).Elem()
}

func (o EdgeGatewayArrayOutput) ToEdgeGatewayArrayOutput() EdgeGatewayArrayOutput {
	return o
}

func (o EdgeGatewayArrayOutput) ToEdgeGatewayArrayOutputWithContext(ctx context.Context) EdgeGatewayArrayOutput {
	return o
}

func (o EdgeGatewayArrayOutput) Index(i pulumi.IntInput) EdgeGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EdgeGateway {
		return vs[0].([]*EdgeGateway)[vs[1].(int)]
	}).(EdgeGatewayOutput)
}

type EdgeGatewayMapOutput struct{ *pulumi.OutputState }

func (EdgeGatewayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EdgeGateway)(nil)).Elem()
}

func (o EdgeGatewayMapOutput) ToEdgeGatewayMapOutput() EdgeGatewayMapOutput {
	return o
}

func (o EdgeGatewayMapOutput) ToEdgeGatewayMapOutputWithContext(ctx context.Context) EdgeGatewayMapOutput {
	return o
}

func (o EdgeGatewayMapOutput) MapIndex(k pulumi.StringInput) EdgeGatewayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EdgeGateway {
		return vs[0].(map[string]*EdgeGateway)[vs[1].(string)]
	}).(EdgeGatewayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeGatewayInput)(nil)).Elem(), &EdgeGateway{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeGatewayArrayInput)(nil)).Elem(), EdgeGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EdgeGatewayMapInput)(nil)).Elem(), EdgeGatewayMap{})
	pulumi.RegisterOutputType(EdgeGatewayOutput{})
	pulumi.RegisterOutputType(EdgeGatewayArrayOutput{})
	pulumi.RegisterOutputType(EdgeGatewayMapOutput{})
}
