// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCatalogVappTemplate(ctx *pulumi.Context, args *LookupCatalogVappTemplateArgs, opts ...pulumi.InvokeOption) (*LookupCatalogVappTemplateResult, error) {
	var rv LookupCatalogVappTemplateResult
	err := ctx.Invoke("vcd:index/getCatalogVappTemplate:getCatalogVappTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCatalogVappTemplate.
type LookupCatalogVappTemplateArgs struct {
	CatalogId *string                       `pulumi:"catalogId"`
	Filter    *GetCatalogVappTemplateFilter `pulumi:"filter"`
	Name      *string                       `pulumi:"name"`
	Org       *string                       `pulumi:"org"`
	VdcId     *string                       `pulumi:"vdcId"`
}

// A collection of values returned by getCatalogVappTemplate.
type LookupCatalogVappTemplateResult struct {
	CatalogId   *string                       `pulumi:"catalogId"`
	Created     string                        `pulumi:"created"`
	Description string                        `pulumi:"description"`
	Filter      *GetCatalogVappTemplateFilter `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Deprecated: Use metadata_entry instead
	Metadata        map[string]interface{}                `pulumi:"metadata"`
	MetadataEntries []GetCatalogVappTemplateMetadataEntry `pulumi:"metadataEntries"`
	Name            *string                               `pulumi:"name"`
	Org             *string                               `pulumi:"org"`
	VdcId           *string                               `pulumi:"vdcId"`
	VmNames         []string                              `pulumi:"vmNames"`
}

func LookupCatalogVappTemplateOutput(ctx *pulumi.Context, args LookupCatalogVappTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupCatalogVappTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCatalogVappTemplateResult, error) {
			args := v.(LookupCatalogVappTemplateArgs)
			r, err := LookupCatalogVappTemplate(ctx, &args, opts...)
			var s LookupCatalogVappTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCatalogVappTemplateResultOutput)
}

// A collection of arguments for invoking getCatalogVappTemplate.
type LookupCatalogVappTemplateOutputArgs struct {
	CatalogId pulumi.StringPtrInput                `pulumi:"catalogId"`
	Filter    GetCatalogVappTemplateFilterPtrInput `pulumi:"filter"`
	Name      pulumi.StringPtrInput                `pulumi:"name"`
	Org       pulumi.StringPtrInput                `pulumi:"org"`
	VdcId     pulumi.StringPtrInput                `pulumi:"vdcId"`
}

func (LookupCatalogVappTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogVappTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getCatalogVappTemplate.
type LookupCatalogVappTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupCatalogVappTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogVappTemplateResult)(nil)).Elem()
}

func (o LookupCatalogVappTemplateResultOutput) ToLookupCatalogVappTemplateResultOutput() LookupCatalogVappTemplateResultOutput {
	return o
}

func (o LookupCatalogVappTemplateResultOutput) ToLookupCatalogVappTemplateResultOutputWithContext(ctx context.Context) LookupCatalogVappTemplateResultOutput {
	return o
}

func (o LookupCatalogVappTemplateResultOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCatalogVappTemplateResult) *string { return v.CatalogId }).(pulumi.StringPtrOutput)
}

func (o LookupCatalogVappTemplateResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogVappTemplateResult) string { return v.Created }).(pulumi.StringOutput)
}

func (o LookupCatalogVappTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogVappTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupCatalogVappTemplateResultOutput) Filter() GetCatalogVappTemplateFilterPtrOutput {
	return o.ApplyT(func(v LookupCatalogVappTemplateResult) *GetCatalogVappTemplateFilter { return v.Filter }).(GetCatalogVappTemplateFilterPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCatalogVappTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogVappTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// Deprecated: Use metadata_entry instead
func (o LookupCatalogVappTemplateResultOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v LookupCatalogVappTemplateResult) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

func (o LookupCatalogVappTemplateResultOutput) MetadataEntries() GetCatalogVappTemplateMetadataEntryArrayOutput {
	return o.ApplyT(func(v LookupCatalogVappTemplateResult) []GetCatalogVappTemplateMetadataEntry {
		return v.MetadataEntries
	}).(GetCatalogVappTemplateMetadataEntryArrayOutput)
}

func (o LookupCatalogVappTemplateResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCatalogVappTemplateResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupCatalogVappTemplateResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCatalogVappTemplateResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o LookupCatalogVappTemplateResultOutput) VdcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCatalogVappTemplateResult) *string { return v.VdcId }).(pulumi.StringPtrOutput)
}

func (o LookupCatalogVappTemplateResultOutput) VmNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCatalogVappTemplateResult) []string { return v.VmNames }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCatalogVappTemplateResultOutput{})
}
