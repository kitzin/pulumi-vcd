// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCatalogMedia(ctx *pulumi.Context, args *LookupCatalogMediaArgs, opts ...pulumi.InvokeOption) (*LookupCatalogMediaResult, error) {
	var rv LookupCatalogMediaResult
	err := ctx.Invoke("vcd:index/getCatalogMedia:getCatalogMedia", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCatalogMedia.
type LookupCatalogMediaArgs struct {
	// Deprecated: use catalog_id instead, especially if using a shared catalog
	Catalog   *string                `pulumi:"catalog"`
	CatalogId *string                `pulumi:"catalogId"`
	Filter    *GetCatalogMediaFilter `pulumi:"filter"`
	Name      *string                `pulumi:"name"`
	Org       *string                `pulumi:"org"`
}

// A collection of values returned by getCatalogMedia.
type LookupCatalogMediaResult struct {
	// Deprecated: use catalog_id instead, especially if using a shared catalog
	Catalog      string                 `pulumi:"catalog"`
	CatalogId    *string                `pulumi:"catalogId"`
	CreationDate string                 `pulumi:"creationDate"`
	Description  string                 `pulumi:"description"`
	Filter       *GetCatalogMediaFilter `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	IsIso       bool   `pulumi:"isIso"`
	IsPublished bool   `pulumi:"isPublished"`
	// Deprecated: Use metadata_entry instead
	Metadata           map[string]interface{}         `pulumi:"metadata"`
	MetadataEntries    []GetCatalogMediaMetadataEntry `pulumi:"metadataEntries"`
	Name               *string                        `pulumi:"name"`
	Org                *string                        `pulumi:"org"`
	OwnerName          string                         `pulumi:"ownerName"`
	Size               int                            `pulumi:"size"`
	Status             string                         `pulumi:"status"`
	StorageProfileName string                         `pulumi:"storageProfileName"`
}

func LookupCatalogMediaOutput(ctx *pulumi.Context, args LookupCatalogMediaOutputArgs, opts ...pulumi.InvokeOption) LookupCatalogMediaResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCatalogMediaResult, error) {
			args := v.(LookupCatalogMediaArgs)
			r, err := LookupCatalogMedia(ctx, &args, opts...)
			var s LookupCatalogMediaResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCatalogMediaResultOutput)
}

// A collection of arguments for invoking getCatalogMedia.
type LookupCatalogMediaOutputArgs struct {
	// Deprecated: use catalog_id instead, especially if using a shared catalog
	Catalog   pulumi.StringPtrInput         `pulumi:"catalog"`
	CatalogId pulumi.StringPtrInput         `pulumi:"catalogId"`
	Filter    GetCatalogMediaFilterPtrInput `pulumi:"filter"`
	Name      pulumi.StringPtrInput         `pulumi:"name"`
	Org       pulumi.StringPtrInput         `pulumi:"org"`
}

func (LookupCatalogMediaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogMediaArgs)(nil)).Elem()
}

// A collection of values returned by getCatalogMedia.
type LookupCatalogMediaResultOutput struct{ *pulumi.OutputState }

func (LookupCatalogMediaResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCatalogMediaResult)(nil)).Elem()
}

func (o LookupCatalogMediaResultOutput) ToLookupCatalogMediaResultOutput() LookupCatalogMediaResultOutput {
	return o
}

func (o LookupCatalogMediaResultOutput) ToLookupCatalogMediaResultOutputWithContext(ctx context.Context) LookupCatalogMediaResultOutput {
	return o
}

// Deprecated: use catalog_id instead, especially if using a shared catalog
func (o LookupCatalogMediaResultOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogMediaResult) string { return v.Catalog }).(pulumi.StringOutput)
}

func (o LookupCatalogMediaResultOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCatalogMediaResult) *string { return v.CatalogId }).(pulumi.StringPtrOutput)
}

func (o LookupCatalogMediaResultOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogMediaResult) string { return v.CreationDate }).(pulumi.StringOutput)
}

func (o LookupCatalogMediaResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogMediaResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupCatalogMediaResultOutput) Filter() GetCatalogMediaFilterPtrOutput {
	return o.ApplyT(func(v LookupCatalogMediaResult) *GetCatalogMediaFilter { return v.Filter }).(GetCatalogMediaFilterPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCatalogMediaResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogMediaResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCatalogMediaResultOutput) IsIso() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCatalogMediaResult) bool { return v.IsIso }).(pulumi.BoolOutput)
}

func (o LookupCatalogMediaResultOutput) IsPublished() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCatalogMediaResult) bool { return v.IsPublished }).(pulumi.BoolOutput)
}

// Deprecated: Use metadata_entry instead
func (o LookupCatalogMediaResultOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v LookupCatalogMediaResult) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

func (o LookupCatalogMediaResultOutput) MetadataEntries() GetCatalogMediaMetadataEntryArrayOutput {
	return o.ApplyT(func(v LookupCatalogMediaResult) []GetCatalogMediaMetadataEntry { return v.MetadataEntries }).(GetCatalogMediaMetadataEntryArrayOutput)
}

func (o LookupCatalogMediaResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCatalogMediaResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupCatalogMediaResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCatalogMediaResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o LookupCatalogMediaResultOutput) OwnerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogMediaResult) string { return v.OwnerName }).(pulumi.StringOutput)
}

func (o LookupCatalogMediaResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCatalogMediaResult) int { return v.Size }).(pulumi.IntOutput)
}

func (o LookupCatalogMediaResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogMediaResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupCatalogMediaResultOutput) StorageProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCatalogMediaResult) string { return v.StorageProfileName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCatalogMediaResultOutput{})
}
