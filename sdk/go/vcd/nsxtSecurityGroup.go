// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NsxtSecurityGroup struct {
	pulumi.CustomResourceState

	// Security Group description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Edge Gateway ID in which security group is located
	EdgeGatewayId pulumi.StringOutput `pulumi:"edgeGatewayId"`
	// Set of Org VDC network IDs attached to this security group
	MemberOrgNetworkIds pulumi.StringArrayOutput `pulumi:"memberOrgNetworkIds"`
	// Set of VM IDs
	MemberVms NsxtSecurityGroupMemberVmArrayOutput `pulumi:"memberVms"`
	// Security Group name
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrOutput `pulumi:"org"`
	// ID of VDC or VDC Group
	OwnerId pulumi.StringOutput `pulumi:"ownerId"`
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: Deprecated in favor of `edge_gateway_id`. Security Group will inherit VDC from parent Edge Gateway.
	Vdc pulumi.StringOutput `pulumi:"vdc"`
}

// NewNsxtSecurityGroup registers a new resource with the given unique name, arguments, and options.
func NewNsxtSecurityGroup(ctx *pulumi.Context,
	name string, args *NsxtSecurityGroupArgs, opts ...pulumi.ResourceOption) (*NsxtSecurityGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EdgeGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'EdgeGatewayId'")
	}
	var resource NsxtSecurityGroup
	err := ctx.RegisterResource("vcd:index/nsxtSecurityGroup:NsxtSecurityGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNsxtSecurityGroup gets an existing NsxtSecurityGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNsxtSecurityGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NsxtSecurityGroupState, opts ...pulumi.ResourceOption) (*NsxtSecurityGroup, error) {
	var resource NsxtSecurityGroup
	err := ctx.ReadResource("vcd:index/nsxtSecurityGroup:NsxtSecurityGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NsxtSecurityGroup resources.
type nsxtSecurityGroupState struct {
	// Security Group description
	Description *string `pulumi:"description"`
	// Edge Gateway ID in which security group is located
	EdgeGatewayId *string `pulumi:"edgeGatewayId"`
	// Set of Org VDC network IDs attached to this security group
	MemberOrgNetworkIds []string `pulumi:"memberOrgNetworkIds"`
	// Set of VM IDs
	MemberVms []NsxtSecurityGroupMemberVm `pulumi:"memberVms"`
	// Security Group name
	Name *string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org *string `pulumi:"org"`
	// ID of VDC or VDC Group
	OwnerId *string `pulumi:"ownerId"`
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: Deprecated in favor of `edge_gateway_id`. Security Group will inherit VDC from parent Edge Gateway.
	Vdc *string `pulumi:"vdc"`
}

type NsxtSecurityGroupState struct {
	// Security Group description
	Description pulumi.StringPtrInput
	// Edge Gateway ID in which security group is located
	EdgeGatewayId pulumi.StringPtrInput
	// Set of Org VDC network IDs attached to this security group
	MemberOrgNetworkIds pulumi.StringArrayInput
	// Set of VM IDs
	MemberVms NsxtSecurityGroupMemberVmArrayInput
	// Security Group name
	Name pulumi.StringPtrInput
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrInput
	// ID of VDC or VDC Group
	OwnerId pulumi.StringPtrInput
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: Deprecated in favor of `edge_gateway_id`. Security Group will inherit VDC from parent Edge Gateway.
	Vdc pulumi.StringPtrInput
}

func (NsxtSecurityGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtSecurityGroupState)(nil)).Elem()
}

type nsxtSecurityGroupArgs struct {
	// Security Group description
	Description *string `pulumi:"description"`
	// Edge Gateway ID in which security group is located
	EdgeGatewayId string `pulumi:"edgeGatewayId"`
	// Set of Org VDC network IDs attached to this security group
	MemberOrgNetworkIds []string `pulumi:"memberOrgNetworkIds"`
	// Security Group name
	Name *string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org *string `pulumi:"org"`
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: Deprecated in favor of `edge_gateway_id`. Security Group will inherit VDC from parent Edge Gateway.
	Vdc *string `pulumi:"vdc"`
}

// The set of arguments for constructing a NsxtSecurityGroup resource.
type NsxtSecurityGroupArgs struct {
	// Security Group description
	Description pulumi.StringPtrInput
	// Edge Gateway ID in which security group is located
	EdgeGatewayId pulumi.StringInput
	// Set of Org VDC network IDs attached to this security group
	MemberOrgNetworkIds pulumi.StringArrayInput
	// Security Group name
	Name pulumi.StringPtrInput
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrInput
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: Deprecated in favor of `edge_gateway_id`. Security Group will inherit VDC from parent Edge Gateway.
	Vdc pulumi.StringPtrInput
}

func (NsxtSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtSecurityGroupArgs)(nil)).Elem()
}

type NsxtSecurityGroupInput interface {
	pulumi.Input

	ToNsxtSecurityGroupOutput() NsxtSecurityGroupOutput
	ToNsxtSecurityGroupOutputWithContext(ctx context.Context) NsxtSecurityGroupOutput
}

func (*NsxtSecurityGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtSecurityGroup)(nil)).Elem()
}

func (i *NsxtSecurityGroup) ToNsxtSecurityGroupOutput() NsxtSecurityGroupOutput {
	return i.ToNsxtSecurityGroupOutputWithContext(context.Background())
}

func (i *NsxtSecurityGroup) ToNsxtSecurityGroupOutputWithContext(ctx context.Context) NsxtSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtSecurityGroupOutput)
}

// NsxtSecurityGroupArrayInput is an input type that accepts NsxtSecurityGroupArray and NsxtSecurityGroupArrayOutput values.
// You can construct a concrete instance of `NsxtSecurityGroupArrayInput` via:
//
//	NsxtSecurityGroupArray{ NsxtSecurityGroupArgs{...} }
type NsxtSecurityGroupArrayInput interface {
	pulumi.Input

	ToNsxtSecurityGroupArrayOutput() NsxtSecurityGroupArrayOutput
	ToNsxtSecurityGroupArrayOutputWithContext(context.Context) NsxtSecurityGroupArrayOutput
}

type NsxtSecurityGroupArray []NsxtSecurityGroupInput

func (NsxtSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtSecurityGroup)(nil)).Elem()
}

func (i NsxtSecurityGroupArray) ToNsxtSecurityGroupArrayOutput() NsxtSecurityGroupArrayOutput {
	return i.ToNsxtSecurityGroupArrayOutputWithContext(context.Background())
}

func (i NsxtSecurityGroupArray) ToNsxtSecurityGroupArrayOutputWithContext(ctx context.Context) NsxtSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtSecurityGroupArrayOutput)
}

// NsxtSecurityGroupMapInput is an input type that accepts NsxtSecurityGroupMap and NsxtSecurityGroupMapOutput values.
// You can construct a concrete instance of `NsxtSecurityGroupMapInput` via:
//
//	NsxtSecurityGroupMap{ "key": NsxtSecurityGroupArgs{...} }
type NsxtSecurityGroupMapInput interface {
	pulumi.Input

	ToNsxtSecurityGroupMapOutput() NsxtSecurityGroupMapOutput
	ToNsxtSecurityGroupMapOutputWithContext(context.Context) NsxtSecurityGroupMapOutput
}

type NsxtSecurityGroupMap map[string]NsxtSecurityGroupInput

func (NsxtSecurityGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtSecurityGroup)(nil)).Elem()
}

func (i NsxtSecurityGroupMap) ToNsxtSecurityGroupMapOutput() NsxtSecurityGroupMapOutput {
	return i.ToNsxtSecurityGroupMapOutputWithContext(context.Background())
}

func (i NsxtSecurityGroupMap) ToNsxtSecurityGroupMapOutputWithContext(ctx context.Context) NsxtSecurityGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtSecurityGroupMapOutput)
}

type NsxtSecurityGroupOutput struct{ *pulumi.OutputState }

func (NsxtSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtSecurityGroup)(nil)).Elem()
}

func (o NsxtSecurityGroupOutput) ToNsxtSecurityGroupOutput() NsxtSecurityGroupOutput {
	return o
}

func (o NsxtSecurityGroupOutput) ToNsxtSecurityGroupOutputWithContext(ctx context.Context) NsxtSecurityGroupOutput {
	return o
}

// Security Group description
func (o NsxtSecurityGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtSecurityGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Edge Gateway ID in which security group is located
func (o NsxtSecurityGroupOutput) EdgeGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtSecurityGroup) pulumi.StringOutput { return v.EdgeGatewayId }).(pulumi.StringOutput)
}

// Set of Org VDC network IDs attached to this security group
func (o NsxtSecurityGroupOutput) MemberOrgNetworkIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtSecurityGroup) pulumi.StringArrayOutput { return v.MemberOrgNetworkIds }).(pulumi.StringArrayOutput)
}

// Set of VM IDs
func (o NsxtSecurityGroupOutput) MemberVms() NsxtSecurityGroupMemberVmArrayOutput {
	return o.ApplyT(func(v *NsxtSecurityGroup) NsxtSecurityGroupMemberVmArrayOutput { return v.MemberVms }).(NsxtSecurityGroupMemberVmArrayOutput)
}

// Security Group name
func (o NsxtSecurityGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtSecurityGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
// different organizations
func (o NsxtSecurityGroupOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtSecurityGroup) pulumi.StringPtrOutput { return v.Org }).(pulumi.StringPtrOutput)
}

// ID of VDC or VDC Group
func (o NsxtSecurityGroupOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtSecurityGroup) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

// The name of VDC to use, optional if defined at provider level
//
// Deprecated: Deprecated in favor of `edge_gateway_id`. Security Group will inherit VDC from parent Edge Gateway.
func (o NsxtSecurityGroupOutput) Vdc() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtSecurityGroup) pulumi.StringOutput { return v.Vdc }).(pulumi.StringOutput)
}

type NsxtSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (NsxtSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtSecurityGroup)(nil)).Elem()
}

func (o NsxtSecurityGroupArrayOutput) ToNsxtSecurityGroupArrayOutput() NsxtSecurityGroupArrayOutput {
	return o
}

func (o NsxtSecurityGroupArrayOutput) ToNsxtSecurityGroupArrayOutputWithContext(ctx context.Context) NsxtSecurityGroupArrayOutput {
	return o
}

func (o NsxtSecurityGroupArrayOutput) Index(i pulumi.IntInput) NsxtSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NsxtSecurityGroup {
		return vs[0].([]*NsxtSecurityGroup)[vs[1].(int)]
	}).(NsxtSecurityGroupOutput)
}

type NsxtSecurityGroupMapOutput struct{ *pulumi.OutputState }

func (NsxtSecurityGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtSecurityGroup)(nil)).Elem()
}

func (o NsxtSecurityGroupMapOutput) ToNsxtSecurityGroupMapOutput() NsxtSecurityGroupMapOutput {
	return o
}

func (o NsxtSecurityGroupMapOutput) ToNsxtSecurityGroupMapOutputWithContext(ctx context.Context) NsxtSecurityGroupMapOutput {
	return o
}

func (o NsxtSecurityGroupMapOutput) MapIndex(k pulumi.StringInput) NsxtSecurityGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NsxtSecurityGroup {
		return vs[0].(map[string]*NsxtSecurityGroup)[vs[1].(string)]
	}).(NsxtSecurityGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtSecurityGroupInput)(nil)).Elem(), &NsxtSecurityGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtSecurityGroupArrayInput)(nil)).Elem(), NsxtSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtSecurityGroupMapInput)(nil)).Elem(), NsxtSecurityGroupMap{})
	pulumi.RegisterOutputType(NsxtSecurityGroupOutput{})
	pulumi.RegisterOutputType(NsxtSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(NsxtSecurityGroupMapOutput{})
}
