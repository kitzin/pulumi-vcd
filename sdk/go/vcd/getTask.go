// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetTask(ctx *pulumi.Context, args *GetTaskArgs, opts ...pulumi.InvokeOption) (*GetTaskResult, error) {
	var rv GetTaskResult
	err := ctx.Invoke("vcd:index/getTask:getTask", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTask.
type GetTaskArgs struct {
	Id string `pulumi:"id"`
}

// A collection of values returned by getTask.
type GetTaskResult struct {
	CancelRequested bool   `pulumi:"cancelRequested"`
	Description     string `pulumi:"description"`
	EndTime         string `pulumi:"endTime"`
	Error           string `pulumi:"error"`
	ExpiryTime      string `pulumi:"expiryTime"`
	Href            string `pulumi:"href"`
	Id              string `pulumi:"id"`
	Name            string `pulumi:"name"`
	Operation       string `pulumi:"operation"`
	OperationName   string `pulumi:"operationName"`
	OrgId           string `pulumi:"orgId"`
	OrgName         string `pulumi:"orgName"`
	OwnerId         string `pulumi:"ownerId"`
	OwnerName       string `pulumi:"ownerName"`
	OwnerType       string `pulumi:"ownerType"`
	Progress        int    `pulumi:"progress"`
	StartTime       string `pulumi:"startTime"`
	Status          string `pulumi:"status"`
	Type            string `pulumi:"type"`
	UserId          string `pulumi:"userId"`
	UserName        string `pulumi:"userName"`
}

func GetTaskOutput(ctx *pulumi.Context, args GetTaskOutputArgs, opts ...pulumi.InvokeOption) GetTaskResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTaskResult, error) {
			args := v.(GetTaskArgs)
			r, err := GetTask(ctx, &args, opts...)
			var s GetTaskResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTaskResultOutput)
}

// A collection of arguments for invoking getTask.
type GetTaskOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetTaskOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTaskArgs)(nil)).Elem()
}

// A collection of values returned by getTask.
type GetTaskResultOutput struct{ *pulumi.OutputState }

func (GetTaskResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTaskResult)(nil)).Elem()
}

func (o GetTaskResultOutput) ToGetTaskResultOutput() GetTaskResultOutput {
	return o
}

func (o GetTaskResultOutput) ToGetTaskResultOutputWithContext(ctx context.Context) GetTaskResultOutput {
	return o
}

func (o GetTaskResultOutput) CancelRequested() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTaskResult) bool { return v.CancelRequested }).(pulumi.BoolOutput)
}

func (o GetTaskResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) Error() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.Error }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) ExpiryTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.ExpiryTime }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.Href }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.Operation }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) OperationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.OperationName }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.OrgId }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) OrgName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.OrgName }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.OwnerId }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) OwnerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.OwnerName }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) OwnerType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.OwnerType }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) Progress() pulumi.IntOutput {
	return o.ApplyT(func(v GetTaskResult) int { return v.Progress }).(pulumi.IntOutput)
}

func (o GetTaskResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.StartTime }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.UserId }).(pulumi.StringOutput)
}

func (o GetTaskResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTaskResult) string { return v.UserName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTaskResultOutput{})
}
