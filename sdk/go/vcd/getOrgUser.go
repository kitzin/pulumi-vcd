// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupOrgUser(ctx *pulumi.Context, args *LookupOrgUserArgs, opts ...pulumi.InvokeOption) (*LookupOrgUserResult, error) {
	var rv LookupOrgUserResult
	err := ctx.Invoke("vcd:index/getOrgUser:getOrgUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrgUser.
type LookupOrgUserArgs struct {
	Name   *string `pulumi:"name"`
	Org    *string `pulumi:"org"`
	UserId *string `pulumi:"userId"`
}

// A collection of values returned by getOrgUser.
type LookupOrgUserResult struct {
	DeployedVmQuota int      `pulumi:"deployedVmQuota"`
	Description     string   `pulumi:"description"`
	EmailAddress    string   `pulumi:"emailAddress"`
	Enabled         bool     `pulumi:"enabled"`
	FullName        string   `pulumi:"fullName"`
	GroupNames      []string `pulumi:"groupNames"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	InstantMessaging string  `pulumi:"instantMessaging"`
	IsExternal       bool    `pulumi:"isExternal"`
	IsGroupRole      bool    `pulumi:"isGroupRole"`
	IsLocked         bool    `pulumi:"isLocked"`
	Name             *string `pulumi:"name"`
	Org              *string `pulumi:"org"`
	ProviderType     string  `pulumi:"providerType"`
	Role             string  `pulumi:"role"`
	StoredVmQuota    int     `pulumi:"storedVmQuota"`
	Telephone        string  `pulumi:"telephone"`
	UserId           *string `pulumi:"userId"`
}

func LookupOrgUserOutput(ctx *pulumi.Context, args LookupOrgUserOutputArgs, opts ...pulumi.InvokeOption) LookupOrgUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOrgUserResult, error) {
			args := v.(LookupOrgUserArgs)
			r, err := LookupOrgUser(ctx, &args, opts...)
			var s LookupOrgUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOrgUserResultOutput)
}

// A collection of arguments for invoking getOrgUser.
type LookupOrgUserOutputArgs struct {
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Org    pulumi.StringPtrInput `pulumi:"org"`
	UserId pulumi.StringPtrInput `pulumi:"userId"`
}

func (LookupOrgUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrgUserArgs)(nil)).Elem()
}

// A collection of values returned by getOrgUser.
type LookupOrgUserResultOutput struct{ *pulumi.OutputState }

func (LookupOrgUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrgUserResult)(nil)).Elem()
}

func (o LookupOrgUserResultOutput) ToLookupOrgUserResultOutput() LookupOrgUserResultOutput {
	return o
}

func (o LookupOrgUserResultOutput) ToLookupOrgUserResultOutputWithContext(ctx context.Context) LookupOrgUserResultOutput {
	return o
}

func (o LookupOrgUserResultOutput) DeployedVmQuota() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOrgUserResult) int { return v.DeployedVmQuota }).(pulumi.IntOutput)
}

func (o LookupOrgUserResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgUserResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupOrgUserResultOutput) EmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgUserResult) string { return v.EmailAddress }).(pulumi.StringOutput)
}

func (o LookupOrgUserResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgUserResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupOrgUserResultOutput) FullName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgUserResult) string { return v.FullName }).(pulumi.StringOutput)
}

func (o LookupOrgUserResultOutput) GroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupOrgUserResult) []string { return v.GroupNames }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupOrgUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupOrgUserResultOutput) InstantMessaging() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgUserResult) string { return v.InstantMessaging }).(pulumi.StringOutput)
}

func (o LookupOrgUserResultOutput) IsExternal() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgUserResult) bool { return v.IsExternal }).(pulumi.BoolOutput)
}

func (o LookupOrgUserResultOutput) IsGroupRole() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgUserResult) bool { return v.IsGroupRole }).(pulumi.BoolOutput)
}

func (o LookupOrgUserResultOutput) IsLocked() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupOrgUserResult) bool { return v.IsLocked }).(pulumi.BoolOutput)
}

func (o LookupOrgUserResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrgUserResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupOrgUserResultOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrgUserResult) *string { return v.Org }).(pulumi.StringPtrOutput)
}

func (o LookupOrgUserResultOutput) ProviderType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgUserResult) string { return v.ProviderType }).(pulumi.StringOutput)
}

func (o LookupOrgUserResultOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgUserResult) string { return v.Role }).(pulumi.StringOutput)
}

func (o LookupOrgUserResultOutput) StoredVmQuota() pulumi.IntOutput {
	return o.ApplyT(func(v LookupOrgUserResult) int { return v.StoredVmQuota }).(pulumi.IntOutput)
}

func (o LookupOrgUserResultOutput) Telephone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrgUserResult) string { return v.Telephone }).(pulumi.StringOutput)
}

func (o LookupOrgUserResultOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrgUserResult) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrgUserResultOutput{})
}
