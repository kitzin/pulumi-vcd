// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NsxtIpSet struct {
	pulumi.CustomResourceState

	// IP Set description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Edge Gateway name in which IP Set is located
	EdgeGatewayId pulumi.StringOutput `pulumi:"edgeGatewayId"`
	// A set of IP address, CIDR, IP range objects
	IpAddresses pulumi.StringArrayOutput `pulumi:"ipAddresses"`
	// IP Set name
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrOutput `pulumi:"org"`
	// ID of VDC or VDC Group
	OwnerId pulumi.StringOutput `pulumi:"ownerId"`
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: Deprecated in favor of `edge_gateway_id`. IP Sets will inherit VDC from parent Edge Gateway.
	Vdc pulumi.StringOutput `pulumi:"vdc"`
}

// NewNsxtIpSet registers a new resource with the given unique name, arguments, and options.
func NewNsxtIpSet(ctx *pulumi.Context,
	name string, args *NsxtIpSetArgs, opts ...pulumi.ResourceOption) (*NsxtIpSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EdgeGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'EdgeGatewayId'")
	}
	var resource NsxtIpSet
	err := ctx.RegisterResource("vcd:index/nsxtIpSet:NsxtIpSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNsxtIpSet gets an existing NsxtIpSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNsxtIpSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NsxtIpSetState, opts ...pulumi.ResourceOption) (*NsxtIpSet, error) {
	var resource NsxtIpSet
	err := ctx.ReadResource("vcd:index/nsxtIpSet:NsxtIpSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NsxtIpSet resources.
type nsxtIpSetState struct {
	// IP Set description
	Description *string `pulumi:"description"`
	// Edge Gateway name in which IP Set is located
	EdgeGatewayId *string `pulumi:"edgeGatewayId"`
	// A set of IP address, CIDR, IP range objects
	IpAddresses []string `pulumi:"ipAddresses"`
	// IP Set name
	Name *string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org *string `pulumi:"org"`
	// ID of VDC or VDC Group
	OwnerId *string `pulumi:"ownerId"`
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: Deprecated in favor of `edge_gateway_id`. IP Sets will inherit VDC from parent Edge Gateway.
	Vdc *string `pulumi:"vdc"`
}

type NsxtIpSetState struct {
	// IP Set description
	Description pulumi.StringPtrInput
	// Edge Gateway name in which IP Set is located
	EdgeGatewayId pulumi.StringPtrInput
	// A set of IP address, CIDR, IP range objects
	IpAddresses pulumi.StringArrayInput
	// IP Set name
	Name pulumi.StringPtrInput
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrInput
	// ID of VDC or VDC Group
	OwnerId pulumi.StringPtrInput
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: Deprecated in favor of `edge_gateway_id`. IP Sets will inherit VDC from parent Edge Gateway.
	Vdc pulumi.StringPtrInput
}

func (NsxtIpSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtIpSetState)(nil)).Elem()
}

type nsxtIpSetArgs struct {
	// IP Set description
	Description *string `pulumi:"description"`
	// Edge Gateway name in which IP Set is located
	EdgeGatewayId string `pulumi:"edgeGatewayId"`
	// A set of IP address, CIDR, IP range objects
	IpAddresses []string `pulumi:"ipAddresses"`
	// IP Set name
	Name *string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org *string `pulumi:"org"`
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: Deprecated in favor of `edge_gateway_id`. IP Sets will inherit VDC from parent Edge Gateway.
	Vdc *string `pulumi:"vdc"`
}

// The set of arguments for constructing a NsxtIpSet resource.
type NsxtIpSetArgs struct {
	// IP Set description
	Description pulumi.StringPtrInput
	// Edge Gateway name in which IP Set is located
	EdgeGatewayId pulumi.StringInput
	// A set of IP address, CIDR, IP range objects
	IpAddresses pulumi.StringArrayInput
	// IP Set name
	Name pulumi.StringPtrInput
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrInput
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: Deprecated in favor of `edge_gateway_id`. IP Sets will inherit VDC from parent Edge Gateway.
	Vdc pulumi.StringPtrInput
}

func (NsxtIpSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtIpSetArgs)(nil)).Elem()
}

type NsxtIpSetInput interface {
	pulumi.Input

	ToNsxtIpSetOutput() NsxtIpSetOutput
	ToNsxtIpSetOutputWithContext(ctx context.Context) NsxtIpSetOutput
}

func (*NsxtIpSet) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtIpSet)(nil)).Elem()
}

func (i *NsxtIpSet) ToNsxtIpSetOutput() NsxtIpSetOutput {
	return i.ToNsxtIpSetOutputWithContext(context.Background())
}

func (i *NsxtIpSet) ToNsxtIpSetOutputWithContext(ctx context.Context) NsxtIpSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtIpSetOutput)
}

// NsxtIpSetArrayInput is an input type that accepts NsxtIpSetArray and NsxtIpSetArrayOutput values.
// You can construct a concrete instance of `NsxtIpSetArrayInput` via:
//
//	NsxtIpSetArray{ NsxtIpSetArgs{...} }
type NsxtIpSetArrayInput interface {
	pulumi.Input

	ToNsxtIpSetArrayOutput() NsxtIpSetArrayOutput
	ToNsxtIpSetArrayOutputWithContext(context.Context) NsxtIpSetArrayOutput
}

type NsxtIpSetArray []NsxtIpSetInput

func (NsxtIpSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtIpSet)(nil)).Elem()
}

func (i NsxtIpSetArray) ToNsxtIpSetArrayOutput() NsxtIpSetArrayOutput {
	return i.ToNsxtIpSetArrayOutputWithContext(context.Background())
}

func (i NsxtIpSetArray) ToNsxtIpSetArrayOutputWithContext(ctx context.Context) NsxtIpSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtIpSetArrayOutput)
}

// NsxtIpSetMapInput is an input type that accepts NsxtIpSetMap and NsxtIpSetMapOutput values.
// You can construct a concrete instance of `NsxtIpSetMapInput` via:
//
//	NsxtIpSetMap{ "key": NsxtIpSetArgs{...} }
type NsxtIpSetMapInput interface {
	pulumi.Input

	ToNsxtIpSetMapOutput() NsxtIpSetMapOutput
	ToNsxtIpSetMapOutputWithContext(context.Context) NsxtIpSetMapOutput
}

type NsxtIpSetMap map[string]NsxtIpSetInput

func (NsxtIpSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtIpSet)(nil)).Elem()
}

func (i NsxtIpSetMap) ToNsxtIpSetMapOutput() NsxtIpSetMapOutput {
	return i.ToNsxtIpSetMapOutputWithContext(context.Background())
}

func (i NsxtIpSetMap) ToNsxtIpSetMapOutputWithContext(ctx context.Context) NsxtIpSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtIpSetMapOutput)
}

type NsxtIpSetOutput struct{ *pulumi.OutputState }

func (NsxtIpSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtIpSet)(nil)).Elem()
}

func (o NsxtIpSetOutput) ToNsxtIpSetOutput() NsxtIpSetOutput {
	return o
}

func (o NsxtIpSetOutput) ToNsxtIpSetOutputWithContext(ctx context.Context) NsxtIpSetOutput {
	return o
}

// IP Set description
func (o NsxtIpSetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtIpSet) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Edge Gateway name in which IP Set is located
func (o NsxtIpSetOutput) EdgeGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtIpSet) pulumi.StringOutput { return v.EdgeGatewayId }).(pulumi.StringOutput)
}

// A set of IP address, CIDR, IP range objects
func (o NsxtIpSetOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NsxtIpSet) pulumi.StringArrayOutput { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// IP Set name
func (o NsxtIpSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtIpSet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
// different organizations
func (o NsxtIpSetOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtIpSet) pulumi.StringPtrOutput { return v.Org }).(pulumi.StringPtrOutput)
}

// ID of VDC or VDC Group
func (o NsxtIpSetOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtIpSet) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

// The name of VDC to use, optional if defined at provider level
//
// Deprecated: Deprecated in favor of `edge_gateway_id`. IP Sets will inherit VDC from parent Edge Gateway.
func (o NsxtIpSetOutput) Vdc() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtIpSet) pulumi.StringOutput { return v.Vdc }).(pulumi.StringOutput)
}

type NsxtIpSetArrayOutput struct{ *pulumi.OutputState }

func (NsxtIpSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtIpSet)(nil)).Elem()
}

func (o NsxtIpSetArrayOutput) ToNsxtIpSetArrayOutput() NsxtIpSetArrayOutput {
	return o
}

func (o NsxtIpSetArrayOutput) ToNsxtIpSetArrayOutputWithContext(ctx context.Context) NsxtIpSetArrayOutput {
	return o
}

func (o NsxtIpSetArrayOutput) Index(i pulumi.IntInput) NsxtIpSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NsxtIpSet {
		return vs[0].([]*NsxtIpSet)[vs[1].(int)]
	}).(NsxtIpSetOutput)
}

type NsxtIpSetMapOutput struct{ *pulumi.OutputState }

func (NsxtIpSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtIpSet)(nil)).Elem()
}

func (o NsxtIpSetMapOutput) ToNsxtIpSetMapOutput() NsxtIpSetMapOutput {
	return o
}

func (o NsxtIpSetMapOutput) ToNsxtIpSetMapOutputWithContext(ctx context.Context) NsxtIpSetMapOutput {
	return o
}

func (o NsxtIpSetMapOutput) MapIndex(k pulumi.StringInput) NsxtIpSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NsxtIpSet {
		return vs[0].(map[string]*NsxtIpSet)[vs[1].(string)]
	}).(NsxtIpSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtIpSetInput)(nil)).Elem(), &NsxtIpSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtIpSetArrayInput)(nil)).Elem(), NsxtIpSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtIpSetMapInput)(nil)).Elem(), NsxtIpSetMap{})
	pulumi.RegisterOutputType(NsxtIpSetOutput{})
	pulumi.RegisterOutputType(NsxtIpSetArrayOutput{})
	pulumi.RegisterOutputType(NsxtIpSetMapOutput{})
}
