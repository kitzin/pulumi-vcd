// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkRoutedV2 struct {
	pulumi.CustomResourceState

	// Network description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// DNS server 1
	Dns1 pulumi.StringPtrOutput `pulumi:"dns1"`
	// DNS server 1
	Dns2 pulumi.StringPtrOutput `pulumi:"dns2"`
	// DNS suffix
	DnsSuffix pulumi.StringPtrOutput `pulumi:"dnsSuffix"`
	// Edge gateway ID in which Routed network should be located
	EdgeGatewayId pulumi.StringOutput `pulumi:"edgeGatewayId"`
	// Gateway IP address
	Gateway pulumi.StringOutput `pulumi:"gateway"`
	// Optional interface type (only for NSX-V networks). One of 'INTERNAL' (default), 'DISTRIBUTED', 'SUBINTERFACE'
	InterfaceType pulumi.StringPtrOutput `pulumi:"interfaceType"`
	// Key value map of metadata to assign to this network. Key and value can be any string
	//
	// Deprecated: Use metadata_entry instead
	Metadata pulumi.MapOutput `pulumi:"metadata"`
	// Metadata entries for the given Network
	MetadataEntries NetworkRoutedV2MetadataEntryArrayOutput `pulumi:"metadataEntries"`
	// Network name
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrOutput `pulumi:"org"`
	// ID of VDC or VDC Group
	OwnerId pulumi.StringOutput `pulumi:"ownerId"`
	// Network prefix
	PrefixLength pulumi.IntOutput `pulumi:"prefixLength"`
	// IP ranges used for static pool allocation in the network
	StaticIpPools NetworkRoutedV2StaticIpPoolArrayOutput `pulumi:"staticIpPools"`
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: 'vdc' is deprecated and ineffective. Routed networks will inherit VDC setting from parent Edge Gateway
	Vdc pulumi.StringOutput `pulumi:"vdc"`
}

// NewNetworkRoutedV2 registers a new resource with the given unique name, arguments, and options.
func NewNetworkRoutedV2(ctx *pulumi.Context,
	name string, args *NetworkRoutedV2Args, opts ...pulumi.ResourceOption) (*NetworkRoutedV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EdgeGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'EdgeGatewayId'")
	}
	if args.Gateway == nil {
		return nil, errors.New("invalid value for required argument 'Gateway'")
	}
	if args.PrefixLength == nil {
		return nil, errors.New("invalid value for required argument 'PrefixLength'")
	}
	var resource NetworkRoutedV2
	err := ctx.RegisterResource("vcd:index/networkRoutedV2:NetworkRoutedV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkRoutedV2 gets an existing NetworkRoutedV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkRoutedV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkRoutedV2State, opts ...pulumi.ResourceOption) (*NetworkRoutedV2, error) {
	var resource NetworkRoutedV2
	err := ctx.ReadResource("vcd:index/networkRoutedV2:NetworkRoutedV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkRoutedV2 resources.
type networkRoutedV2State struct {
	// Network description
	Description *string `pulumi:"description"`
	// DNS server 1
	Dns1 *string `pulumi:"dns1"`
	// DNS server 1
	Dns2 *string `pulumi:"dns2"`
	// DNS suffix
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// Edge gateway ID in which Routed network should be located
	EdgeGatewayId *string `pulumi:"edgeGatewayId"`
	// Gateway IP address
	Gateway *string `pulumi:"gateway"`
	// Optional interface type (only for NSX-V networks). One of 'INTERNAL' (default), 'DISTRIBUTED', 'SUBINTERFACE'
	InterfaceType *string `pulumi:"interfaceType"`
	// Key value map of metadata to assign to this network. Key and value can be any string
	//
	// Deprecated: Use metadata_entry instead
	Metadata map[string]interface{} `pulumi:"metadata"`
	// Metadata entries for the given Network
	MetadataEntries []NetworkRoutedV2MetadataEntry `pulumi:"metadataEntries"`
	// Network name
	Name *string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org *string `pulumi:"org"`
	// ID of VDC or VDC Group
	OwnerId *string `pulumi:"ownerId"`
	// Network prefix
	PrefixLength *int `pulumi:"prefixLength"`
	// IP ranges used for static pool allocation in the network
	StaticIpPools []NetworkRoutedV2StaticIpPool `pulumi:"staticIpPools"`
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: 'vdc' is deprecated and ineffective. Routed networks will inherit VDC setting from parent Edge Gateway
	Vdc *string `pulumi:"vdc"`
}

type NetworkRoutedV2State struct {
	// Network description
	Description pulumi.StringPtrInput
	// DNS server 1
	Dns1 pulumi.StringPtrInput
	// DNS server 1
	Dns2 pulumi.StringPtrInput
	// DNS suffix
	DnsSuffix pulumi.StringPtrInput
	// Edge gateway ID in which Routed network should be located
	EdgeGatewayId pulumi.StringPtrInput
	// Gateway IP address
	Gateway pulumi.StringPtrInput
	// Optional interface type (only for NSX-V networks). One of 'INTERNAL' (default), 'DISTRIBUTED', 'SUBINTERFACE'
	InterfaceType pulumi.StringPtrInput
	// Key value map of metadata to assign to this network. Key and value can be any string
	//
	// Deprecated: Use metadata_entry instead
	Metadata pulumi.MapInput
	// Metadata entries for the given Network
	MetadataEntries NetworkRoutedV2MetadataEntryArrayInput
	// Network name
	Name pulumi.StringPtrInput
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrInput
	// ID of VDC or VDC Group
	OwnerId pulumi.StringPtrInput
	// Network prefix
	PrefixLength pulumi.IntPtrInput
	// IP ranges used for static pool allocation in the network
	StaticIpPools NetworkRoutedV2StaticIpPoolArrayInput
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: 'vdc' is deprecated and ineffective. Routed networks will inherit VDC setting from parent Edge Gateway
	Vdc pulumi.StringPtrInput
}

func (NetworkRoutedV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*networkRoutedV2State)(nil)).Elem()
}

type networkRoutedV2Args struct {
	// Network description
	Description *string `pulumi:"description"`
	// DNS server 1
	Dns1 *string `pulumi:"dns1"`
	// DNS server 1
	Dns2 *string `pulumi:"dns2"`
	// DNS suffix
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// Edge gateway ID in which Routed network should be located
	EdgeGatewayId string `pulumi:"edgeGatewayId"`
	// Gateway IP address
	Gateway string `pulumi:"gateway"`
	// Optional interface type (only for NSX-V networks). One of 'INTERNAL' (default), 'DISTRIBUTED', 'SUBINTERFACE'
	InterfaceType *string `pulumi:"interfaceType"`
	// Key value map of metadata to assign to this network. Key and value can be any string
	//
	// Deprecated: Use metadata_entry instead
	Metadata map[string]interface{} `pulumi:"metadata"`
	// Metadata entries for the given Network
	MetadataEntries []NetworkRoutedV2MetadataEntry `pulumi:"metadataEntries"`
	// Network name
	Name *string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org *string `pulumi:"org"`
	// Network prefix
	PrefixLength int `pulumi:"prefixLength"`
	// IP ranges used for static pool allocation in the network
	StaticIpPools []NetworkRoutedV2StaticIpPool `pulumi:"staticIpPools"`
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: 'vdc' is deprecated and ineffective. Routed networks will inherit VDC setting from parent Edge Gateway
	Vdc *string `pulumi:"vdc"`
}

// The set of arguments for constructing a NetworkRoutedV2 resource.
type NetworkRoutedV2Args struct {
	// Network description
	Description pulumi.StringPtrInput
	// DNS server 1
	Dns1 pulumi.StringPtrInput
	// DNS server 1
	Dns2 pulumi.StringPtrInput
	// DNS suffix
	DnsSuffix pulumi.StringPtrInput
	// Edge gateway ID in which Routed network should be located
	EdgeGatewayId pulumi.StringInput
	// Gateway IP address
	Gateway pulumi.StringInput
	// Optional interface type (only for NSX-V networks). One of 'INTERNAL' (default), 'DISTRIBUTED', 'SUBINTERFACE'
	InterfaceType pulumi.StringPtrInput
	// Key value map of metadata to assign to this network. Key and value can be any string
	//
	// Deprecated: Use metadata_entry instead
	Metadata pulumi.MapInput
	// Metadata entries for the given Network
	MetadataEntries NetworkRoutedV2MetadataEntryArrayInput
	// Network name
	Name pulumi.StringPtrInput
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrInput
	// Network prefix
	PrefixLength pulumi.IntInput
	// IP ranges used for static pool allocation in the network
	StaticIpPools NetworkRoutedV2StaticIpPoolArrayInput
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: 'vdc' is deprecated and ineffective. Routed networks will inherit VDC setting from parent Edge Gateway
	Vdc pulumi.StringPtrInput
}

func (NetworkRoutedV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*networkRoutedV2Args)(nil)).Elem()
}

type NetworkRoutedV2Input interface {
	pulumi.Input

	ToNetworkRoutedV2Output() NetworkRoutedV2Output
	ToNetworkRoutedV2OutputWithContext(ctx context.Context) NetworkRoutedV2Output
}

func (*NetworkRoutedV2) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRoutedV2)(nil)).Elem()
}

func (i *NetworkRoutedV2) ToNetworkRoutedV2Output() NetworkRoutedV2Output {
	return i.ToNetworkRoutedV2OutputWithContext(context.Background())
}

func (i *NetworkRoutedV2) ToNetworkRoutedV2OutputWithContext(ctx context.Context) NetworkRoutedV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRoutedV2Output)
}

// NetworkRoutedV2ArrayInput is an input type that accepts NetworkRoutedV2Array and NetworkRoutedV2ArrayOutput values.
// You can construct a concrete instance of `NetworkRoutedV2ArrayInput` via:
//
//	NetworkRoutedV2Array{ NetworkRoutedV2Args{...} }
type NetworkRoutedV2ArrayInput interface {
	pulumi.Input

	ToNetworkRoutedV2ArrayOutput() NetworkRoutedV2ArrayOutput
	ToNetworkRoutedV2ArrayOutputWithContext(context.Context) NetworkRoutedV2ArrayOutput
}

type NetworkRoutedV2Array []NetworkRoutedV2Input

func (NetworkRoutedV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkRoutedV2)(nil)).Elem()
}

func (i NetworkRoutedV2Array) ToNetworkRoutedV2ArrayOutput() NetworkRoutedV2ArrayOutput {
	return i.ToNetworkRoutedV2ArrayOutputWithContext(context.Background())
}

func (i NetworkRoutedV2Array) ToNetworkRoutedV2ArrayOutputWithContext(ctx context.Context) NetworkRoutedV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRoutedV2ArrayOutput)
}

// NetworkRoutedV2MapInput is an input type that accepts NetworkRoutedV2Map and NetworkRoutedV2MapOutput values.
// You can construct a concrete instance of `NetworkRoutedV2MapInput` via:
//
//	NetworkRoutedV2Map{ "key": NetworkRoutedV2Args{...} }
type NetworkRoutedV2MapInput interface {
	pulumi.Input

	ToNetworkRoutedV2MapOutput() NetworkRoutedV2MapOutput
	ToNetworkRoutedV2MapOutputWithContext(context.Context) NetworkRoutedV2MapOutput
}

type NetworkRoutedV2Map map[string]NetworkRoutedV2Input

func (NetworkRoutedV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkRoutedV2)(nil)).Elem()
}

func (i NetworkRoutedV2Map) ToNetworkRoutedV2MapOutput() NetworkRoutedV2MapOutput {
	return i.ToNetworkRoutedV2MapOutputWithContext(context.Background())
}

func (i NetworkRoutedV2Map) ToNetworkRoutedV2MapOutputWithContext(ctx context.Context) NetworkRoutedV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRoutedV2MapOutput)
}

type NetworkRoutedV2Output struct{ *pulumi.OutputState }

func (NetworkRoutedV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkRoutedV2)(nil)).Elem()
}

func (o NetworkRoutedV2Output) ToNetworkRoutedV2Output() NetworkRoutedV2Output {
	return o
}

func (o NetworkRoutedV2Output) ToNetworkRoutedV2OutputWithContext(ctx context.Context) NetworkRoutedV2Output {
	return o
}

// Network description
func (o NetworkRoutedV2Output) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRoutedV2) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// DNS server 1
func (o NetworkRoutedV2Output) Dns1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRoutedV2) pulumi.StringPtrOutput { return v.Dns1 }).(pulumi.StringPtrOutput)
}

// DNS server 1
func (o NetworkRoutedV2Output) Dns2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRoutedV2) pulumi.StringPtrOutput { return v.Dns2 }).(pulumi.StringPtrOutput)
}

// DNS suffix
func (o NetworkRoutedV2Output) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRoutedV2) pulumi.StringPtrOutput { return v.DnsSuffix }).(pulumi.StringPtrOutput)
}

// Edge gateway ID in which Routed network should be located
func (o NetworkRoutedV2Output) EdgeGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkRoutedV2) pulumi.StringOutput { return v.EdgeGatewayId }).(pulumi.StringOutput)
}

// Gateway IP address
func (o NetworkRoutedV2Output) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkRoutedV2) pulumi.StringOutput { return v.Gateway }).(pulumi.StringOutput)
}

// Optional interface type (only for NSX-V networks). One of 'INTERNAL' (default), 'DISTRIBUTED', 'SUBINTERFACE'
func (o NetworkRoutedV2Output) InterfaceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRoutedV2) pulumi.StringPtrOutput { return v.InterfaceType }).(pulumi.StringPtrOutput)
}

// Key value map of metadata to assign to this network. Key and value can be any string
//
// Deprecated: Use metadata_entry instead
func (o NetworkRoutedV2Output) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v *NetworkRoutedV2) pulumi.MapOutput { return v.Metadata }).(pulumi.MapOutput)
}

// Metadata entries for the given Network
func (o NetworkRoutedV2Output) MetadataEntries() NetworkRoutedV2MetadataEntryArrayOutput {
	return o.ApplyT(func(v *NetworkRoutedV2) NetworkRoutedV2MetadataEntryArrayOutput { return v.MetadataEntries }).(NetworkRoutedV2MetadataEntryArrayOutput)
}

// Network name
func (o NetworkRoutedV2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkRoutedV2) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
// different organizations
func (o NetworkRoutedV2Output) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkRoutedV2) pulumi.StringPtrOutput { return v.Org }).(pulumi.StringPtrOutput)
}

// ID of VDC or VDC Group
func (o NetworkRoutedV2Output) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkRoutedV2) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

// Network prefix
func (o NetworkRoutedV2Output) PrefixLength() pulumi.IntOutput {
	return o.ApplyT(func(v *NetworkRoutedV2) pulumi.IntOutput { return v.PrefixLength }).(pulumi.IntOutput)
}

// IP ranges used for static pool allocation in the network
func (o NetworkRoutedV2Output) StaticIpPools() NetworkRoutedV2StaticIpPoolArrayOutput {
	return o.ApplyT(func(v *NetworkRoutedV2) NetworkRoutedV2StaticIpPoolArrayOutput { return v.StaticIpPools }).(NetworkRoutedV2StaticIpPoolArrayOutput)
}

// The name of VDC to use, optional if defined at provider level
//
// Deprecated: 'vdc' is deprecated and ineffective. Routed networks will inherit VDC setting from parent Edge Gateway
func (o NetworkRoutedV2Output) Vdc() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkRoutedV2) pulumi.StringOutput { return v.Vdc }).(pulumi.StringOutput)
}

type NetworkRoutedV2ArrayOutput struct{ *pulumi.OutputState }

func (NetworkRoutedV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkRoutedV2)(nil)).Elem()
}

func (o NetworkRoutedV2ArrayOutput) ToNetworkRoutedV2ArrayOutput() NetworkRoutedV2ArrayOutput {
	return o
}

func (o NetworkRoutedV2ArrayOutput) ToNetworkRoutedV2ArrayOutputWithContext(ctx context.Context) NetworkRoutedV2ArrayOutput {
	return o
}

func (o NetworkRoutedV2ArrayOutput) Index(i pulumi.IntInput) NetworkRoutedV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkRoutedV2 {
		return vs[0].([]*NetworkRoutedV2)[vs[1].(int)]
	}).(NetworkRoutedV2Output)
}

type NetworkRoutedV2MapOutput struct{ *pulumi.OutputState }

func (NetworkRoutedV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkRoutedV2)(nil)).Elem()
}

func (o NetworkRoutedV2MapOutput) ToNetworkRoutedV2MapOutput() NetworkRoutedV2MapOutput {
	return o
}

func (o NetworkRoutedV2MapOutput) ToNetworkRoutedV2MapOutputWithContext(ctx context.Context) NetworkRoutedV2MapOutput {
	return o
}

func (o NetworkRoutedV2MapOutput) MapIndex(k pulumi.StringInput) NetworkRoutedV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkRoutedV2 {
		return vs[0].(map[string]*NetworkRoutedV2)[vs[1].(string)]
	}).(NetworkRoutedV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutedV2Input)(nil)).Elem(), &NetworkRoutedV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutedV2ArrayInput)(nil)).Elem(), NetworkRoutedV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkRoutedV2MapInput)(nil)).Elem(), NetworkRoutedV2Map{})
	pulumi.RegisterOutputType(NetworkRoutedV2Output{})
	pulumi.RegisterOutputType(NetworkRoutedV2ArrayOutput{})
	pulumi.RegisterOutputType(NetworkRoutedV2MapOutput{})
}
