// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetNsxtTier0Router(ctx *pulumi.Context, args *GetNsxtTier0RouterArgs, opts ...pulumi.InvokeOption) (*GetNsxtTier0RouterResult, error) {
	var rv GetNsxtTier0RouterResult
	err := ctx.Invoke("vcd:index/getNsxtTier0Router:getNsxtTier0Router", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNsxtTier0Router.
type GetNsxtTier0RouterArgs struct {
	Name          string `pulumi:"name"`
	NsxtManagerId string `pulumi:"nsxtManagerId"`
}

// A collection of values returned by getNsxtTier0Router.
type GetNsxtTier0RouterResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id            string `pulumi:"id"`
	IsAssigned    bool   `pulumi:"isAssigned"`
	Name          string `pulumi:"name"`
	NsxtManagerId string `pulumi:"nsxtManagerId"`
}

func GetNsxtTier0RouterOutput(ctx *pulumi.Context, args GetNsxtTier0RouterOutputArgs, opts ...pulumi.InvokeOption) GetNsxtTier0RouterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNsxtTier0RouterResult, error) {
			args := v.(GetNsxtTier0RouterArgs)
			r, err := GetNsxtTier0Router(ctx, &args, opts...)
			var s GetNsxtTier0RouterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNsxtTier0RouterResultOutput)
}

// A collection of arguments for invoking getNsxtTier0Router.
type GetNsxtTier0RouterOutputArgs struct {
	Name          pulumi.StringInput `pulumi:"name"`
	NsxtManagerId pulumi.StringInput `pulumi:"nsxtManagerId"`
}

func (GetNsxtTier0RouterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtTier0RouterArgs)(nil)).Elem()
}

// A collection of values returned by getNsxtTier0Router.
type GetNsxtTier0RouterResultOutput struct{ *pulumi.OutputState }

func (GetNsxtTier0RouterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNsxtTier0RouterResult)(nil)).Elem()
}

func (o GetNsxtTier0RouterResultOutput) ToGetNsxtTier0RouterResultOutput() GetNsxtTier0RouterResultOutput {
	return o
}

func (o GetNsxtTier0RouterResultOutput) ToGetNsxtTier0RouterResultOutputWithContext(ctx context.Context) GetNsxtTier0RouterResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetNsxtTier0RouterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtTier0RouterResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNsxtTier0RouterResultOutput) IsAssigned() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNsxtTier0RouterResult) bool { return v.IsAssigned }).(pulumi.BoolOutput)
}

func (o GetNsxtTier0RouterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtTier0RouterResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNsxtTier0RouterResultOutput) NsxtManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNsxtTier0RouterResult) string { return v.NsxtManagerId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNsxtTier0RouterResultOutput{})
}
