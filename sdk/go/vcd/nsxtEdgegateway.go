// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vcd

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NsxtEdgegateway struct {
	pulumi.CustomResourceState

	// Dedicating the External Network will enable Route Advertisement for this Edge Gateway.
	DedicateExternalNetwork pulumi.BoolPtrOutput `pulumi:"dedicateExternalNetwork"`
	// Edge Gateway description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Select specific NSX-T Edge Cluster. Will be inherited from external network if not specified
	EdgeClusterId pulumi.StringOutput `pulumi:"edgeClusterId"`
	// External network ID
	ExternalNetworkId pulumi.StringOutput `pulumi:"externalNetworkId"`
	// Edge Gateway name
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrOutput `pulumi:"org"`
	// ID of VDC or VDC Group
	OwnerId pulumi.StringOutput `pulumi:"ownerId"`
	// Primary IP address of edge gateway. Read-only (can be specified in specific subnet)
	PrimaryIp pulumi.StringOutput `pulumi:"primaryIp"`
	// Optional ID of starting VDC if the 'owner_id' is a VDC Group
	StartingVdcId pulumi.StringPtrOutput `pulumi:"startingVdcId"`
	// One or more blocks with external network information to be attached to this gateway's interface
	Subnets NsxtEdgegatewaySubnetArrayOutput `pulumi:"subnets"`
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: This field is deprecated in favor of 'owner_id' which supports both - VDC and VDC Group IDs
	Vdc pulumi.StringOutput `pulumi:"vdc"`
}

// NewNsxtEdgegateway registers a new resource with the given unique name, arguments, and options.
func NewNsxtEdgegateway(ctx *pulumi.Context,
	name string, args *NsxtEdgegatewayArgs, opts ...pulumi.ResourceOption) (*NsxtEdgegateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExternalNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'ExternalNetworkId'")
	}
	if args.Subnets == nil {
		return nil, errors.New("invalid value for required argument 'Subnets'")
	}
	var resource NsxtEdgegateway
	err := ctx.RegisterResource("vcd:index/nsxtEdgegateway:NsxtEdgegateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNsxtEdgegateway gets an existing NsxtEdgegateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNsxtEdgegateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NsxtEdgegatewayState, opts ...pulumi.ResourceOption) (*NsxtEdgegateway, error) {
	var resource NsxtEdgegateway
	err := ctx.ReadResource("vcd:index/nsxtEdgegateway:NsxtEdgegateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NsxtEdgegateway resources.
type nsxtEdgegatewayState struct {
	// Dedicating the External Network will enable Route Advertisement for this Edge Gateway.
	DedicateExternalNetwork *bool `pulumi:"dedicateExternalNetwork"`
	// Edge Gateway description
	Description *string `pulumi:"description"`
	// Select specific NSX-T Edge Cluster. Will be inherited from external network if not specified
	EdgeClusterId *string `pulumi:"edgeClusterId"`
	// External network ID
	ExternalNetworkId *string `pulumi:"externalNetworkId"`
	// Edge Gateway name
	Name *string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org *string `pulumi:"org"`
	// ID of VDC or VDC Group
	OwnerId *string `pulumi:"ownerId"`
	// Primary IP address of edge gateway. Read-only (can be specified in specific subnet)
	PrimaryIp *string `pulumi:"primaryIp"`
	// Optional ID of starting VDC if the 'owner_id' is a VDC Group
	StartingVdcId *string `pulumi:"startingVdcId"`
	// One or more blocks with external network information to be attached to this gateway's interface
	Subnets []NsxtEdgegatewaySubnet `pulumi:"subnets"`
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: This field is deprecated in favor of 'owner_id' which supports both - VDC and VDC Group IDs
	Vdc *string `pulumi:"vdc"`
}

type NsxtEdgegatewayState struct {
	// Dedicating the External Network will enable Route Advertisement for this Edge Gateway.
	DedicateExternalNetwork pulumi.BoolPtrInput
	// Edge Gateway description
	Description pulumi.StringPtrInput
	// Select specific NSX-T Edge Cluster. Will be inherited from external network if not specified
	EdgeClusterId pulumi.StringPtrInput
	// External network ID
	ExternalNetworkId pulumi.StringPtrInput
	// Edge Gateway name
	Name pulumi.StringPtrInput
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrInput
	// ID of VDC or VDC Group
	OwnerId pulumi.StringPtrInput
	// Primary IP address of edge gateway. Read-only (can be specified in specific subnet)
	PrimaryIp pulumi.StringPtrInput
	// Optional ID of starting VDC if the 'owner_id' is a VDC Group
	StartingVdcId pulumi.StringPtrInput
	// One or more blocks with external network information to be attached to this gateway's interface
	Subnets NsxtEdgegatewaySubnetArrayInput
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: This field is deprecated in favor of 'owner_id' which supports both - VDC and VDC Group IDs
	Vdc pulumi.StringPtrInput
}

func (NsxtEdgegatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtEdgegatewayState)(nil)).Elem()
}

type nsxtEdgegatewayArgs struct {
	// Dedicating the External Network will enable Route Advertisement for this Edge Gateway.
	DedicateExternalNetwork *bool `pulumi:"dedicateExternalNetwork"`
	// Edge Gateway description
	Description *string `pulumi:"description"`
	// Select specific NSX-T Edge Cluster. Will be inherited from external network if not specified
	EdgeClusterId *string `pulumi:"edgeClusterId"`
	// External network ID
	ExternalNetworkId string `pulumi:"externalNetworkId"`
	// Edge Gateway name
	Name *string `pulumi:"name"`
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org *string `pulumi:"org"`
	// ID of VDC or VDC Group
	OwnerId *string `pulumi:"ownerId"`
	// Optional ID of starting VDC if the 'owner_id' is a VDC Group
	StartingVdcId *string `pulumi:"startingVdcId"`
	// One or more blocks with external network information to be attached to this gateway's interface
	Subnets []NsxtEdgegatewaySubnet `pulumi:"subnets"`
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: This field is deprecated in favor of 'owner_id' which supports both - VDC and VDC Group IDs
	Vdc *string `pulumi:"vdc"`
}

// The set of arguments for constructing a NsxtEdgegateway resource.
type NsxtEdgegatewayArgs struct {
	// Dedicating the External Network will enable Route Advertisement for this Edge Gateway.
	DedicateExternalNetwork pulumi.BoolPtrInput
	// Edge Gateway description
	Description pulumi.StringPtrInput
	// Select specific NSX-T Edge Cluster. Will be inherited from external network if not specified
	EdgeClusterId pulumi.StringPtrInput
	// External network ID
	ExternalNetworkId pulumi.StringInput
	// Edge Gateway name
	Name pulumi.StringPtrInput
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
	// different organizations
	Org pulumi.StringPtrInput
	// ID of VDC or VDC Group
	OwnerId pulumi.StringPtrInput
	// Optional ID of starting VDC if the 'owner_id' is a VDC Group
	StartingVdcId pulumi.StringPtrInput
	// One or more blocks with external network information to be attached to this gateway's interface
	Subnets NsxtEdgegatewaySubnetArrayInput
	// The name of VDC to use, optional if defined at provider level
	//
	// Deprecated: This field is deprecated in favor of 'owner_id' which supports both - VDC and VDC Group IDs
	Vdc pulumi.StringPtrInput
}

func (NsxtEdgegatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nsxtEdgegatewayArgs)(nil)).Elem()
}

type NsxtEdgegatewayInput interface {
	pulumi.Input

	ToNsxtEdgegatewayOutput() NsxtEdgegatewayOutput
	ToNsxtEdgegatewayOutputWithContext(ctx context.Context) NsxtEdgegatewayOutput
}

func (*NsxtEdgegateway) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtEdgegateway)(nil)).Elem()
}

func (i *NsxtEdgegateway) ToNsxtEdgegatewayOutput() NsxtEdgegatewayOutput {
	return i.ToNsxtEdgegatewayOutputWithContext(context.Background())
}

func (i *NsxtEdgegateway) ToNsxtEdgegatewayOutputWithContext(ctx context.Context) NsxtEdgegatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayOutput)
}

// NsxtEdgegatewayArrayInput is an input type that accepts NsxtEdgegatewayArray and NsxtEdgegatewayArrayOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayArrayInput` via:
//
//	NsxtEdgegatewayArray{ NsxtEdgegatewayArgs{...} }
type NsxtEdgegatewayArrayInput interface {
	pulumi.Input

	ToNsxtEdgegatewayArrayOutput() NsxtEdgegatewayArrayOutput
	ToNsxtEdgegatewayArrayOutputWithContext(context.Context) NsxtEdgegatewayArrayOutput
}

type NsxtEdgegatewayArray []NsxtEdgegatewayInput

func (NsxtEdgegatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtEdgegateway)(nil)).Elem()
}

func (i NsxtEdgegatewayArray) ToNsxtEdgegatewayArrayOutput() NsxtEdgegatewayArrayOutput {
	return i.ToNsxtEdgegatewayArrayOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayArray) ToNsxtEdgegatewayArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayArrayOutput)
}

// NsxtEdgegatewayMapInput is an input type that accepts NsxtEdgegatewayMap and NsxtEdgegatewayMapOutput values.
// You can construct a concrete instance of `NsxtEdgegatewayMapInput` via:
//
//	NsxtEdgegatewayMap{ "key": NsxtEdgegatewayArgs{...} }
type NsxtEdgegatewayMapInput interface {
	pulumi.Input

	ToNsxtEdgegatewayMapOutput() NsxtEdgegatewayMapOutput
	ToNsxtEdgegatewayMapOutputWithContext(context.Context) NsxtEdgegatewayMapOutput
}

type NsxtEdgegatewayMap map[string]NsxtEdgegatewayInput

func (NsxtEdgegatewayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtEdgegateway)(nil)).Elem()
}

func (i NsxtEdgegatewayMap) ToNsxtEdgegatewayMapOutput() NsxtEdgegatewayMapOutput {
	return i.ToNsxtEdgegatewayMapOutputWithContext(context.Background())
}

func (i NsxtEdgegatewayMap) ToNsxtEdgegatewayMapOutputWithContext(ctx context.Context) NsxtEdgegatewayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NsxtEdgegatewayMapOutput)
}

type NsxtEdgegatewayOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NsxtEdgegateway)(nil)).Elem()
}

func (o NsxtEdgegatewayOutput) ToNsxtEdgegatewayOutput() NsxtEdgegatewayOutput {
	return o
}

func (o NsxtEdgegatewayOutput) ToNsxtEdgegatewayOutputWithContext(ctx context.Context) NsxtEdgegatewayOutput {
	return o
}

// Dedicating the External Network will enable Route Advertisement for this Edge Gateway.
func (o NsxtEdgegatewayOutput) DedicateExternalNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NsxtEdgegateway) pulumi.BoolPtrOutput { return v.DedicateExternalNetwork }).(pulumi.BoolPtrOutput)
}

// Edge Gateway description
func (o NsxtEdgegatewayOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtEdgegateway) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Select specific NSX-T Edge Cluster. Will be inherited from external network if not specified
func (o NsxtEdgegatewayOutput) EdgeClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtEdgegateway) pulumi.StringOutput { return v.EdgeClusterId }).(pulumi.StringOutput)
}

// External network ID
func (o NsxtEdgegatewayOutput) ExternalNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtEdgegateway) pulumi.StringOutput { return v.ExternalNetworkId }).(pulumi.StringOutput)
}

// Edge Gateway name
func (o NsxtEdgegatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtEdgegateway) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
// different organizations
func (o NsxtEdgegatewayOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtEdgegateway) pulumi.StringPtrOutput { return v.Org }).(pulumi.StringPtrOutput)
}

// ID of VDC or VDC Group
func (o NsxtEdgegatewayOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtEdgegateway) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

// Primary IP address of edge gateway. Read-only (can be specified in specific subnet)
func (o NsxtEdgegatewayOutput) PrimaryIp() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtEdgegateway) pulumi.StringOutput { return v.PrimaryIp }).(pulumi.StringOutput)
}

// Optional ID of starting VDC if the 'owner_id' is a VDC Group
func (o NsxtEdgegatewayOutput) StartingVdcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NsxtEdgegateway) pulumi.StringPtrOutput { return v.StartingVdcId }).(pulumi.StringPtrOutput)
}

// One or more blocks with external network information to be attached to this gateway's interface
func (o NsxtEdgegatewayOutput) Subnets() NsxtEdgegatewaySubnetArrayOutput {
	return o.ApplyT(func(v *NsxtEdgegateway) NsxtEdgegatewaySubnetArrayOutput { return v.Subnets }).(NsxtEdgegatewaySubnetArrayOutput)
}

// The name of VDC to use, optional if defined at provider level
//
// Deprecated: This field is deprecated in favor of 'owner_id' which supports both - VDC and VDC Group IDs
func (o NsxtEdgegatewayOutput) Vdc() pulumi.StringOutput {
	return o.ApplyT(func(v *NsxtEdgegateway) pulumi.StringOutput { return v.Vdc }).(pulumi.StringOutput)
}

type NsxtEdgegatewayArrayOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NsxtEdgegateway)(nil)).Elem()
}

func (o NsxtEdgegatewayArrayOutput) ToNsxtEdgegatewayArrayOutput() NsxtEdgegatewayArrayOutput {
	return o
}

func (o NsxtEdgegatewayArrayOutput) ToNsxtEdgegatewayArrayOutputWithContext(ctx context.Context) NsxtEdgegatewayArrayOutput {
	return o
}

func (o NsxtEdgegatewayArrayOutput) Index(i pulumi.IntInput) NsxtEdgegatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NsxtEdgegateway {
		return vs[0].([]*NsxtEdgegateway)[vs[1].(int)]
	}).(NsxtEdgegatewayOutput)
}

type NsxtEdgegatewayMapOutput struct{ *pulumi.OutputState }

func (NsxtEdgegatewayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NsxtEdgegateway)(nil)).Elem()
}

func (o NsxtEdgegatewayMapOutput) ToNsxtEdgegatewayMapOutput() NsxtEdgegatewayMapOutput {
	return o
}

func (o NsxtEdgegatewayMapOutput) ToNsxtEdgegatewayMapOutputWithContext(ctx context.Context) NsxtEdgegatewayMapOutput {
	return o
}

func (o NsxtEdgegatewayMapOutput) MapIndex(k pulumi.StringInput) NsxtEdgegatewayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NsxtEdgegateway {
		return vs[0].(map[string]*NsxtEdgegateway)[vs[1].(string)]
	}).(NsxtEdgegatewayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayInput)(nil)).Elem(), &NsxtEdgegateway{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayArrayInput)(nil)).Elem(), NsxtEdgegatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NsxtEdgegatewayMapInput)(nil)).Elem(), NsxtEdgegatewayMap{})
	pulumi.RegisterOutputType(NsxtEdgegatewayOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayArrayOutput{})
	pulumi.RegisterOutputType(NsxtEdgegatewayMapOutput{})
}
