// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/vappOrgNetwork:VappOrgNetwork")]
    public partial class VappOrgNetwork : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Fencing allows identical virtual machines in different vApp networks connect to organization VDC networks that are
        /// accessed in this vApp
        /// </summary>
        [Output("isFenced")]
        public Output<bool?> IsFenced { get; private set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
        /// different organizations
        /// </summary>
        [Output("org")]
        public Output<string?> Org { get; private set; } = null!;

        /// <summary>
        /// Organization network name to which vApp network is connected to
        /// </summary>
        [Output("orgNetworkName")]
        public Output<string> OrgNetworkName { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the network resources such as IP/MAC of router will be retained across deployments. Default is false.
        /// </summary>
        [Output("retainIpMacEnabled")]
        public Output<bool?> RetainIpMacEnabled { get; private set; } = null!;

        /// <summary>
        /// vApp network name
        /// </summary>
        [Output("vappName")]
        public Output<string> VappName { get; private set; } = null!;

        /// <summary>
        /// The name of VDC to use, optional if defined at provider level
        /// </summary>
        [Output("vdc")]
        public Output<string?> Vdc { get; private set; } = null!;


        /// <summary>
        /// Create a VappOrgNetwork resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VappOrgNetwork(string name, VappOrgNetworkArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/vappOrgNetwork:VappOrgNetwork", name, args ?? new VappOrgNetworkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VappOrgNetwork(string name, Input<string> id, VappOrgNetworkState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/vappOrgNetwork:VappOrgNetwork", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VappOrgNetwork resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VappOrgNetwork Get(string name, Input<string> id, VappOrgNetworkState? state = null, CustomResourceOptions? options = null)
        {
            return new VappOrgNetwork(name, id, state, options);
        }
    }

    public sealed class VappOrgNetworkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Fencing allows identical virtual machines in different vApp networks connect to organization VDC networks that are
        /// accessed in this vApp
        /// </summary>
        [Input("isFenced")]
        public Input<bool>? IsFenced { get; set; }

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
        /// different organizations
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// Organization network name to which vApp network is connected to
        /// </summary>
        [Input("orgNetworkName", required: true)]
        public Input<string> OrgNetworkName { get; set; } = null!;

        /// <summary>
        /// Specifies whether the network resources such as IP/MAC of router will be retained across deployments. Default is false.
        /// </summary>
        [Input("retainIpMacEnabled")]
        public Input<bool>? RetainIpMacEnabled { get; set; }

        /// <summary>
        /// vApp network name
        /// </summary>
        [Input("vappName", required: true)]
        public Input<string> VappName { get; set; } = null!;

        /// <summary>
        /// The name of VDC to use, optional if defined at provider level
        /// </summary>
        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        public VappOrgNetworkArgs()
        {
        }
        public static new VappOrgNetworkArgs Empty => new VappOrgNetworkArgs();
    }

    public sealed class VappOrgNetworkState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Fencing allows identical virtual machines in different vApp networks connect to organization VDC networks that are
        /// accessed in this vApp
        /// </summary>
        [Input("isFenced")]
        public Input<bool>? IsFenced { get; set; }

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
        /// different organizations
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// Organization network name to which vApp network is connected to
        /// </summary>
        [Input("orgNetworkName")]
        public Input<string>? OrgNetworkName { get; set; }

        /// <summary>
        /// Specifies whether the network resources such as IP/MAC of router will be retained across deployments. Default is false.
        /// </summary>
        [Input("retainIpMacEnabled")]
        public Input<bool>? RetainIpMacEnabled { get; set; }

        /// <summary>
        /// vApp network name
        /// </summary>
        [Input("vappName")]
        public Input<string>? VappName { get; set; }

        /// <summary>
        /// The name of VDC to use, optional if defined at provider level
        /// </summary>
        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        public VappOrgNetworkState()
        {
        }
        public static new VappOrgNetworkState Empty => new VappOrgNetworkState();
    }
}
