// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/nsxtAlbEdgegatewayServiceEngineGroup:NsxtAlbEdgegatewayServiceEngineGroup")]
    public partial class NsxtAlbEdgegatewayServiceEngineGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Number of deployed virtual services for this Service Engine Group
        /// </summary>
        [Output("deployedVirtualServices")]
        public Output<int> DeployedVirtualServices { get; private set; } = null!;

        /// <summary>
        /// Edge Gateway ID in which ALB Service Engine Group should be located
        /// </summary>
        [Output("edgeGatewayId")]
        public Output<string> EdgeGatewayId { get; private set; } = null!;

        /// <summary>
        /// Maximum number of virtual services to be used in this Service Engine Group
        /// </summary>
        [Output("maxVirtualServices")]
        public Output<int> MaxVirtualServices { get; private set; } = null!;

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
        /// different organizations
        /// </summary>
        [Output("org")]
        public Output<string?> Org { get; private set; } = null!;

        /// <summary>
        /// Number of reserved virtual services for this Service Engine Group
        /// </summary>
        [Output("reservedVirtualServices")]
        public Output<string> ReservedVirtualServices { get; private set; } = null!;

        /// <summary>
        /// Service Engine Group ID to attach to this NSX-T Edge Gateway
        /// </summary>
        [Output("serviceEngineGroupId")]
        public Output<string> ServiceEngineGroupId { get; private set; } = null!;

        /// <summary>
        /// Service Engine Group Name which is attached to NSX-T Edge Gateway
        /// </summary>
        [Output("serviceEngineGroupName")]
        public Output<string> ServiceEngineGroupName { get; private set; } = null!;

        /// <summary>
        /// The name of VDC to use, optional if defined at provider level
        /// </summary>
        [Output("vdc")]
        public Output<string> Vdc { get; private set; } = null!;


        /// <summary>
        /// Create a NsxtAlbEdgegatewayServiceEngineGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NsxtAlbEdgegatewayServiceEngineGroup(string name, NsxtAlbEdgegatewayServiceEngineGroupArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/nsxtAlbEdgegatewayServiceEngineGroup:NsxtAlbEdgegatewayServiceEngineGroup", name, args ?? new NsxtAlbEdgegatewayServiceEngineGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NsxtAlbEdgegatewayServiceEngineGroup(string name, Input<string> id, NsxtAlbEdgegatewayServiceEngineGroupState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/nsxtAlbEdgegatewayServiceEngineGroup:NsxtAlbEdgegatewayServiceEngineGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NsxtAlbEdgegatewayServiceEngineGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NsxtAlbEdgegatewayServiceEngineGroup Get(string name, Input<string> id, NsxtAlbEdgegatewayServiceEngineGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new NsxtAlbEdgegatewayServiceEngineGroup(name, id, state, options);
        }
    }

    public sealed class NsxtAlbEdgegatewayServiceEngineGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Edge Gateway ID in which ALB Service Engine Group should be located
        /// </summary>
        [Input("edgeGatewayId", required: true)]
        public Input<string> EdgeGatewayId { get; set; } = null!;

        /// <summary>
        /// Maximum number of virtual services to be used in this Service Engine Group
        /// </summary>
        [Input("maxVirtualServices")]
        public Input<int>? MaxVirtualServices { get; set; }

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
        /// different organizations
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// Number of reserved virtual services for this Service Engine Group
        /// </summary>
        [Input("reservedVirtualServices")]
        public Input<string>? ReservedVirtualServices { get; set; }

        /// <summary>
        /// Service Engine Group ID to attach to this NSX-T Edge Gateway
        /// </summary>
        [Input("serviceEngineGroupId", required: true)]
        public Input<string> ServiceEngineGroupId { get; set; } = null!;

        /// <summary>
        /// The name of VDC to use, optional if defined at provider level
        /// </summary>
        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        public NsxtAlbEdgegatewayServiceEngineGroupArgs()
        {
        }
        public static new NsxtAlbEdgegatewayServiceEngineGroupArgs Empty => new NsxtAlbEdgegatewayServiceEngineGroupArgs();
    }

    public sealed class NsxtAlbEdgegatewayServiceEngineGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Number of deployed virtual services for this Service Engine Group
        /// </summary>
        [Input("deployedVirtualServices")]
        public Input<int>? DeployedVirtualServices { get; set; }

        /// <summary>
        /// Edge Gateway ID in which ALB Service Engine Group should be located
        /// </summary>
        [Input("edgeGatewayId")]
        public Input<string>? EdgeGatewayId { get; set; }

        /// <summary>
        /// Maximum number of virtual services to be used in this Service Engine Group
        /// </summary>
        [Input("maxVirtualServices")]
        public Input<int>? MaxVirtualServices { get; set; }

        /// <summary>
        /// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
        /// different organizations
        /// </summary>
        [Input("org")]
        public Input<string>? Org { get; set; }

        /// <summary>
        /// Number of reserved virtual services for this Service Engine Group
        /// </summary>
        [Input("reservedVirtualServices")]
        public Input<string>? ReservedVirtualServices { get; set; }

        /// <summary>
        /// Service Engine Group ID to attach to this NSX-T Edge Gateway
        /// </summary>
        [Input("serviceEngineGroupId")]
        public Input<string>? ServiceEngineGroupId { get; set; }

        /// <summary>
        /// Service Engine Group Name which is attached to NSX-T Edge Gateway
        /// </summary>
        [Input("serviceEngineGroupName")]
        public Input<string>? ServiceEngineGroupName { get; set; }

        /// <summary>
        /// The name of VDC to use, optional if defined at provider level
        /// </summary>
        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        public NsxtAlbEdgegatewayServiceEngineGroupState()
        {
        }
        public static new NsxtAlbEdgegatewayServiceEngineGroupState Empty => new NsxtAlbEdgegatewayServiceEngineGroupState();
    }
}
