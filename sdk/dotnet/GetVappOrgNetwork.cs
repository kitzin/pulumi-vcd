// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetVappOrgNetwork
    {
        public static Task<GetVappOrgNetworkResult> InvokeAsync(GetVappOrgNetworkArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVappOrgNetworkResult>("vcd:index/getVappOrgNetwork:getVappOrgNetwork", args ?? new GetVappOrgNetworkArgs(), options.WithDefaults());

        public static Output<GetVappOrgNetworkResult> Invoke(GetVappOrgNetworkInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetVappOrgNetworkResult>("vcd:index/getVappOrgNetwork:getVappOrgNetwork", args ?? new GetVappOrgNetworkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVappOrgNetworkArgs : global::Pulumi.InvokeArgs
    {
        [Input("org")]
        public string? Org { get; set; }

        [Input("orgNetworkName", required: true)]
        public string OrgNetworkName { get; set; } = null!;

        [Input("vappName", required: true)]
        public string VappName { get; set; } = null!;

        [Input("vdc")]
        public string? Vdc { get; set; }

        public GetVappOrgNetworkArgs()
        {
        }
        public static new GetVappOrgNetworkArgs Empty => new GetVappOrgNetworkArgs();
    }

    public sealed class GetVappOrgNetworkInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("org")]
        public Input<string>? Org { get; set; }

        [Input("orgNetworkName", required: true)]
        public Input<string> OrgNetworkName { get; set; } = null!;

        [Input("vappName", required: true)]
        public Input<string> VappName { get; set; } = null!;

        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        public GetVappOrgNetworkInvokeArgs()
        {
        }
        public static new GetVappOrgNetworkInvokeArgs Empty => new GetVappOrgNetworkInvokeArgs();
    }


    [OutputType]
    public sealed class GetVappOrgNetworkResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool IsFenced;
        public readonly string? Org;
        public readonly string OrgNetworkName;
        public readonly bool RetainIpMacEnabled;
        public readonly string VappName;
        public readonly string? Vdc;

        [OutputConstructor]
        private GetVappOrgNetworkResult(
            string id,

            bool isFenced,

            string? org,

            string orgNetworkName,

            bool retainIpMacEnabled,

            string vappName,

            string? vdc)
        {
            Id = id;
            IsFenced = isFenced;
            Org = org;
            OrgNetworkName = orgNetworkName;
            RetainIpMacEnabled = retainIpMacEnabled;
            VappName = vappName;
            Vdc = vdc;
        }
    }
}
