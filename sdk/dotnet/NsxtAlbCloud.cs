// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/nsxtAlbCloud:NsxtAlbCloud")]
    public partial class NsxtAlbCloud : global::Pulumi.CustomResource
    {
        /// <summary>
        /// NSX-T ALB Controller ID
        /// </summary>
        [Output("controllerId")]
        public Output<string> ControllerId { get; private set; } = null!;

        /// <summary>
        /// NSX-T ALB Cloud description
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// NSX-T ALB Cloud detailed health message
        /// </summary>
        [Output("healthMessage")]
        public Output<string> HealthMessage { get; private set; } = null!;

        /// <summary>
        /// NSX-T ALB Cloud health status
        /// </summary>
        [Output("healthStatus")]
        public Output<string> HealthStatus { get; private set; } = null!;

        /// <summary>
        /// NSX-T ALB Importable Cloud ID
        /// </summary>
        [Output("importableCloudId")]
        public Output<string> ImportableCloudId { get; private set; } = null!;

        /// <summary>
        /// NSX-T ALB Cloud name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Network pool ID for NSX-T ALB Importable Cloud
        /// </summary>
        [Output("networkPoolId")]
        public Output<string> NetworkPoolId { get; private set; } = null!;

        /// <summary>
        /// Network pool name of NSX-T ALB Cloud
        /// </summary>
        [Output("networkPoolName")]
        public Output<string> NetworkPoolName { get; private set; } = null!;


        /// <summary>
        /// Create a NsxtAlbCloud resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NsxtAlbCloud(string name, NsxtAlbCloudArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/nsxtAlbCloud:NsxtAlbCloud", name, args ?? new NsxtAlbCloudArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NsxtAlbCloud(string name, Input<string> id, NsxtAlbCloudState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/nsxtAlbCloud:NsxtAlbCloud", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NsxtAlbCloud resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NsxtAlbCloud Get(string name, Input<string> id, NsxtAlbCloudState? state = null, CustomResourceOptions? options = null)
        {
            return new NsxtAlbCloud(name, id, state, options);
        }
    }

    public sealed class NsxtAlbCloudArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// NSX-T ALB Controller ID
        /// </summary>
        [Input("controllerId", required: true)]
        public Input<string> ControllerId { get; set; } = null!;

        /// <summary>
        /// NSX-T ALB Cloud description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// NSX-T ALB Importable Cloud ID
        /// </summary>
        [Input("importableCloudId", required: true)]
        public Input<string> ImportableCloudId { get; set; } = null!;

        /// <summary>
        /// NSX-T ALB Cloud name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Network pool ID for NSX-T ALB Importable Cloud
        /// </summary>
        [Input("networkPoolId", required: true)]
        public Input<string> NetworkPoolId { get; set; } = null!;

        public NsxtAlbCloudArgs()
        {
        }
        public static new NsxtAlbCloudArgs Empty => new NsxtAlbCloudArgs();
    }

    public sealed class NsxtAlbCloudState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// NSX-T ALB Controller ID
        /// </summary>
        [Input("controllerId")]
        public Input<string>? ControllerId { get; set; }

        /// <summary>
        /// NSX-T ALB Cloud description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// NSX-T ALB Cloud detailed health message
        /// </summary>
        [Input("healthMessage")]
        public Input<string>? HealthMessage { get; set; }

        /// <summary>
        /// NSX-T ALB Cloud health status
        /// </summary>
        [Input("healthStatus")]
        public Input<string>? HealthStatus { get; set; }

        /// <summary>
        /// NSX-T ALB Importable Cloud ID
        /// </summary>
        [Input("importableCloudId")]
        public Input<string>? ImportableCloudId { get; set; }

        /// <summary>
        /// NSX-T ALB Cloud name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Network pool ID for NSX-T ALB Importable Cloud
        /// </summary>
        [Input("networkPoolId")]
        public Input<string>? NetworkPoolId { get; set; }

        /// <summary>
        /// Network pool name of NSX-T ALB Cloud
        /// </summary>
        [Input("networkPoolName")]
        public Input<string>? NetworkPoolName { get; set; }

        public NsxtAlbCloudState()
        {
        }
        public static new NsxtAlbCloudState Empty => new NsxtAlbCloudState();
    }
}
