// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetResourceSchema
    {
        public static Task<GetResourceSchemaResult> InvokeAsync(GetResourceSchemaArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetResourceSchemaResult>("vcd:index/getResourceSchema:getResourceSchema", args ?? new GetResourceSchemaArgs(), options.WithDefaults());

        public static Output<GetResourceSchemaResult> Invoke(GetResourceSchemaInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetResourceSchemaResult>("vcd:index/getResourceSchema:getResourceSchema", args ?? new GetResourceSchemaInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourceSchemaArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("resourceType", required: true)]
        public string ResourceType { get; set; } = null!;

        public GetResourceSchemaArgs()
        {
        }
        public static new GetResourceSchemaArgs Empty => new GetResourceSchemaArgs();
    }

    public sealed class GetResourceSchemaInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        public GetResourceSchemaInvokeArgs()
        {
        }
        public static new GetResourceSchemaInvokeArgs Empty => new GetResourceSchemaInvokeArgs();
    }


    [OutputType]
    public sealed class GetResourceSchemaResult
    {
        public readonly ImmutableArray<Outputs.GetResourceSchemaAttributeResult> Attributes;
        public readonly ImmutableArray<Outputs.GetResourceSchemaBlockAttributeResult> BlockAttributes;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string ResourceType;

        [OutputConstructor]
        private GetResourceSchemaResult(
            ImmutableArray<Outputs.GetResourceSchemaAttributeResult> attributes,

            ImmutableArray<Outputs.GetResourceSchemaBlockAttributeResult> blockAttributes,

            string id,

            string name,

            string resourceType)
        {
            Attributes = attributes;
            BlockAttributes = blockAttributes;
            Id = id;
            Name = name;
            ResourceType = resourceType;
        }
    }
}
