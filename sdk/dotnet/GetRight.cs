// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetRight
    {
        public static Task<GetRightResult> InvokeAsync(GetRightArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRightResult>("vcd:index/getRight:getRight", args ?? new GetRightArgs(), options.WithDefaults());

        public static Output<GetRightResult> Invoke(GetRightInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRightResult>("vcd:index/getRight:getRight", args ?? new GetRightInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRightArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetRightArgs()
        {
        }
        public static new GetRightArgs Empty => new GetRightArgs();
    }

    public sealed class GetRightInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetRightInvokeArgs()
        {
        }
        public static new GetRightInvokeArgs Empty => new GetRightInvokeArgs();
    }


    [OutputType]
    public sealed class GetRightResult
    {
        public readonly string BundleKey;
        public readonly string CategoryId;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetRightImpliedRightResult> ImpliedRights;
        public readonly string Name;
        public readonly string RightType;

        [OutputConstructor]
        private GetRightResult(
            string bundleKey,

            string categoryId,

            string description,

            string id,

            ImmutableArray<Outputs.GetRightImpliedRightResult> impliedRights,

            string name,

            string rightType)
        {
            BundleKey = bundleKey;
            CategoryId = categoryId;
            Description = description;
            Id = id;
            ImpliedRights = impliedRights;
            Name = name;
            RightType = rightType;
        }
    }
}
