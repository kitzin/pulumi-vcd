// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetNsxtAppPortProfile
    {
        public static Task<GetNsxtAppPortProfileResult> InvokeAsync(GetNsxtAppPortProfileArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNsxtAppPortProfileResult>("vcd:index/getNsxtAppPortProfile:getNsxtAppPortProfile", args ?? new GetNsxtAppPortProfileArgs(), options.WithDefaults());

        public static Output<GetNsxtAppPortProfileResult> Invoke(GetNsxtAppPortProfileInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetNsxtAppPortProfileResult>("vcd:index/getNsxtAppPortProfile:getNsxtAppPortProfile", args ?? new GetNsxtAppPortProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNsxtAppPortProfileArgs : global::Pulumi.InvokeArgs
    {
        [Input("contextId")]
        public string? ContextId { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("nsxtManagerId")]
        public string? NsxtManagerId { get; set; }

        [Input("org")]
        public string? Org { get; set; }

        [Input("scope", required: true)]
        public string Scope { get; set; } = null!;

        [Input("vdc")]
        public string? Vdc { get; set; }

        public GetNsxtAppPortProfileArgs()
        {
        }
        public static new GetNsxtAppPortProfileArgs Empty => new GetNsxtAppPortProfileArgs();
    }

    public sealed class GetNsxtAppPortProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("contextId")]
        public Input<string>? ContextId { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("nsxtManagerId")]
        public Input<string>? NsxtManagerId { get; set; }

        [Input("org")]
        public Input<string>? Org { get; set; }

        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        public GetNsxtAppPortProfileInvokeArgs()
        {
        }
        public static new GetNsxtAppPortProfileInvokeArgs Empty => new GetNsxtAppPortProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetNsxtAppPortProfileResult
    {
        public readonly ImmutableArray<Outputs.GetNsxtAppPortProfileAppPortResult> AppPorts;
        public readonly string ContextId;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string? NsxtManagerId;
        public readonly string? Org;
        public readonly string Scope;
        public readonly string? Vdc;

        [OutputConstructor]
        private GetNsxtAppPortProfileResult(
            ImmutableArray<Outputs.GetNsxtAppPortProfileAppPortResult> appPorts,

            string contextId,

            string description,

            string id,

            string name,

            string? nsxtManagerId,

            string? org,

            string scope,

            string? vdc)
        {
            AppPorts = appPorts;
            ContextId = contextId;
            Description = description;
            Id = id;
            Name = name;
            NsxtManagerId = nsxtManagerId;
            Org = org;
            Scope = scope;
            Vdc = vdc;
        }
    }
}
