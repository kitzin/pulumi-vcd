// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetCatalogItem
    {
        public static Task<GetCatalogItemResult> InvokeAsync(GetCatalogItemArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCatalogItemResult>("vcd:index/getCatalogItem:getCatalogItem", args ?? new GetCatalogItemArgs(), options.WithDefaults());

        public static Output<GetCatalogItemResult> Invoke(GetCatalogItemInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCatalogItemResult>("vcd:index/getCatalogItem:getCatalogItem", args ?? new GetCatalogItemInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCatalogItemArgs : global::Pulumi.InvokeArgs
    {
        [Input("catalog", required: true)]
        public string Catalog { get; set; } = null!;

        [Input("filter")]
        public Inputs.GetCatalogItemFilterArgs? Filter { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("org")]
        public string? Org { get; set; }

        public GetCatalogItemArgs()
        {
        }
        public static new GetCatalogItemArgs Empty => new GetCatalogItemArgs();
    }

    public sealed class GetCatalogItemInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("catalog", required: true)]
        public Input<string> Catalog { get; set; } = null!;

        [Input("filter")]
        public Input<Inputs.GetCatalogItemFilterInputArgs>? Filter { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("org")]
        public Input<string>? Org { get; set; }

        public GetCatalogItemInvokeArgs()
        {
        }
        public static new GetCatalogItemInvokeArgs Empty => new GetCatalogItemInvokeArgs();
    }


    [OutputType]
    public sealed class GetCatalogItemResult
    {
        public readonly string Catalog;
        public readonly ImmutableDictionary<string, object> CatalogItemMetadata;
        public readonly string Created;
        public readonly string Description;
        public readonly Outputs.GetCatalogItemFilterResult? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, object> Metadata;
        public readonly ImmutableArray<Outputs.GetCatalogItemMetadataEntryResult> MetadataEntries;
        public readonly string? Name;
        public readonly string? Org;

        [OutputConstructor]
        private GetCatalogItemResult(
            string catalog,

            ImmutableDictionary<string, object> catalogItemMetadata,

            string created,

            string description,

            Outputs.GetCatalogItemFilterResult? filter,

            string id,

            ImmutableDictionary<string, object> metadata,

            ImmutableArray<Outputs.GetCatalogItemMetadataEntryResult> metadataEntries,

            string? name,

            string? org)
        {
            Catalog = catalog;
            CatalogItemMetadata = catalogItemMetadata;
            Created = created;
            Description = description;
            Filter = filter;
            Id = id;
            Metadata = metadata;
            MetadataEntries = metadataEntries;
            Name = name;
            Org = org;
        }
    }
}
