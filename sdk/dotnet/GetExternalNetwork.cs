// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetExternalNetwork
    {
        public static Task<GetExternalNetworkResult> InvokeAsync(GetExternalNetworkArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetExternalNetworkResult>("vcd:index/getExternalNetwork:getExternalNetwork", args ?? new GetExternalNetworkArgs(), options.WithDefaults());

        public static Output<GetExternalNetworkResult> Invoke(GetExternalNetworkInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetExternalNetworkResult>("vcd:index/getExternalNetwork:getExternalNetwork", args ?? new GetExternalNetworkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExternalNetworkArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetExternalNetworkArgs()
        {
        }
        public static new GetExternalNetworkArgs Empty => new GetExternalNetworkArgs();
    }

    public sealed class GetExternalNetworkInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetExternalNetworkInvokeArgs()
        {
        }
        public static new GetExternalNetworkInvokeArgs Empty => new GetExternalNetworkInvokeArgs();
    }


    [OutputType]
    public sealed class GetExternalNetworkResult
    {
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetExternalNetworkIpScopeResult> IpScopes;
        public readonly string Name;
        public readonly bool RetainNetInfoAcrossDeployments;
        public readonly ImmutableArray<Outputs.GetExternalNetworkVsphereNetworkResult> VsphereNetworks;

        [OutputConstructor]
        private GetExternalNetworkResult(
            string description,

            string id,

            ImmutableArray<Outputs.GetExternalNetworkIpScopeResult> ipScopes,

            string name,

            bool retainNetInfoAcrossDeployments,

            ImmutableArray<Outputs.GetExternalNetworkVsphereNetworkResult> vsphereNetworks)
        {
            Description = description;
            Id = id;
            IpScopes = ipScopes;
            Name = name;
            RetainNetInfoAcrossDeployments = retainNetInfoAcrossDeployments;
            VsphereNetworks = vsphereNetworks;
        }
    }
}
