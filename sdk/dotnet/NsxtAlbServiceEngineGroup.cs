// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    [VcdResourceType("vcd:index/nsxtAlbServiceEngineGroup:NsxtAlbServiceEngineGroup")]
    public partial class NsxtAlbServiceEngineGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// NSX-T ALB backing Cloud ID
        /// </summary>
        [Output("albCloudId")]
        public Output<string> AlbCloudId { get; private set; } = null!;

        /// <summary>
        /// NSX-T ALB Service Engine Group deployed virtual services
        /// </summary>
        [Output("deployedVirtualServices")]
        public Output<int> DeployedVirtualServices { get; private set; } = null!;

        /// <summary>
        /// NSX-T ALB Service Engine Group description
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// NSX-T ALB Service Engine Group HA mode
        /// </summary>
        [Output("haMode")]
        public Output<string> HaMode { get; private set; } = null!;

        /// <summary>
        /// NSX-T ALB Importable Service Engine Group Name
        /// </summary>
        [Output("importableServiceEngineGroupName")]
        public Output<string> ImportableServiceEngineGroupName { get; private set; } = null!;

        /// <summary>
        /// NSX-T ALB Service Engine Group maximum virtual services
        /// </summary>
        [Output("maxVirtualServices")]
        public Output<int> MaxVirtualServices { get; private set; } = null!;

        /// <summary>
        /// NSX-T ALB Service Engine Group name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Boolean value that shows if virtual services are overallocated
        /// </summary>
        [Output("overallocated")]
        public Output<bool?> Overallocated { get; private set; } = null!;

        /// <summary>
        /// NSX-T ALB Service Engine Group reservation model. One of 'DEDICATED', 'SHARED'
        /// </summary>
        [Output("reservationModel")]
        public Output<string> ReservationModel { get; private set; } = null!;

        /// <summary>
        /// NSX-T ALB Service Engine Group reserved virtual services
        /// </summary>
        [Output("reservedVirtualServices")]
        public Output<int> ReservedVirtualServices { get; private set; } = null!;

        /// <summary>
        /// Feature set for this ALB Service Engine Group. One of 'STANDARD', 'PREMIUM'.
        /// </summary>
        [Output("supportedFeatureSet")]
        public Output<string> SupportedFeatureSet { get; private set; } = null!;

        /// <summary>
        /// Boolean value that shows if sync should be performed on every refresh
        /// </summary>
        [Output("syncOnRefresh")]
        public Output<bool?> SyncOnRefresh { get; private set; } = null!;


        /// <summary>
        /// Create a NsxtAlbServiceEngineGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NsxtAlbServiceEngineGroup(string name, NsxtAlbServiceEngineGroupArgs args, CustomResourceOptions? options = null)
            : base("vcd:index/nsxtAlbServiceEngineGroup:NsxtAlbServiceEngineGroup", name, args ?? new NsxtAlbServiceEngineGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NsxtAlbServiceEngineGroup(string name, Input<string> id, NsxtAlbServiceEngineGroupState? state = null, CustomResourceOptions? options = null)
            : base("vcd:index/nsxtAlbServiceEngineGroup:NsxtAlbServiceEngineGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NsxtAlbServiceEngineGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NsxtAlbServiceEngineGroup Get(string name, Input<string> id, NsxtAlbServiceEngineGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new NsxtAlbServiceEngineGroup(name, id, state, options);
        }
    }

    public sealed class NsxtAlbServiceEngineGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// NSX-T ALB backing Cloud ID
        /// </summary>
        [Input("albCloudId", required: true)]
        public Input<string> AlbCloudId { get; set; } = null!;

        /// <summary>
        /// NSX-T ALB Service Engine Group description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// NSX-T ALB Importable Service Engine Group Name
        /// </summary>
        [Input("importableServiceEngineGroupName", required: true)]
        public Input<string> ImportableServiceEngineGroupName { get; set; } = null!;

        /// <summary>
        /// NSX-T ALB Service Engine Group name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Boolean value that shows if virtual services are overallocated
        /// </summary>
        [Input("overallocated")]
        public Input<bool>? Overallocated { get; set; }

        /// <summary>
        /// NSX-T ALB Service Engine Group reservation model. One of 'DEDICATED', 'SHARED'
        /// </summary>
        [Input("reservationModel", required: true)]
        public Input<string> ReservationModel { get; set; } = null!;

        /// <summary>
        /// Feature set for this ALB Service Engine Group. One of 'STANDARD', 'PREMIUM'.
        /// </summary>
        [Input("supportedFeatureSet")]
        public Input<string>? SupportedFeatureSet { get; set; }

        /// <summary>
        /// Boolean value that shows if sync should be performed on every refresh
        /// </summary>
        [Input("syncOnRefresh")]
        public Input<bool>? SyncOnRefresh { get; set; }

        public NsxtAlbServiceEngineGroupArgs()
        {
        }
        public static new NsxtAlbServiceEngineGroupArgs Empty => new NsxtAlbServiceEngineGroupArgs();
    }

    public sealed class NsxtAlbServiceEngineGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// NSX-T ALB backing Cloud ID
        /// </summary>
        [Input("albCloudId")]
        public Input<string>? AlbCloudId { get; set; }

        /// <summary>
        /// NSX-T ALB Service Engine Group deployed virtual services
        /// </summary>
        [Input("deployedVirtualServices")]
        public Input<int>? DeployedVirtualServices { get; set; }

        /// <summary>
        /// NSX-T ALB Service Engine Group description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// NSX-T ALB Service Engine Group HA mode
        /// </summary>
        [Input("haMode")]
        public Input<string>? HaMode { get; set; }

        /// <summary>
        /// NSX-T ALB Importable Service Engine Group Name
        /// </summary>
        [Input("importableServiceEngineGroupName")]
        public Input<string>? ImportableServiceEngineGroupName { get; set; }

        /// <summary>
        /// NSX-T ALB Service Engine Group maximum virtual services
        /// </summary>
        [Input("maxVirtualServices")]
        public Input<int>? MaxVirtualServices { get; set; }

        /// <summary>
        /// NSX-T ALB Service Engine Group name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Boolean value that shows if virtual services are overallocated
        /// </summary>
        [Input("overallocated")]
        public Input<bool>? Overallocated { get; set; }

        /// <summary>
        /// NSX-T ALB Service Engine Group reservation model. One of 'DEDICATED', 'SHARED'
        /// </summary>
        [Input("reservationModel")]
        public Input<string>? ReservationModel { get; set; }

        /// <summary>
        /// NSX-T ALB Service Engine Group reserved virtual services
        /// </summary>
        [Input("reservedVirtualServices")]
        public Input<int>? ReservedVirtualServices { get; set; }

        /// <summary>
        /// Feature set for this ALB Service Engine Group. One of 'STANDARD', 'PREMIUM'.
        /// </summary>
        [Input("supportedFeatureSet")]
        public Input<string>? SupportedFeatureSet { get; set; }

        /// <summary>
        /// Boolean value that shows if sync should be performed on every refresh
        /// </summary>
        [Input("syncOnRefresh")]
        public Input<bool>? SyncOnRefresh { get; set; }

        public NsxtAlbServiceEngineGroupState()
        {
        }
        public static new NsxtAlbServiceEngineGroupState Empty => new NsxtAlbServiceEngineGroupState();
    }
}
