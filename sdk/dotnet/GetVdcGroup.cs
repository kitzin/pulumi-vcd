// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetVdcGroup
    {
        public static Task<GetVdcGroupResult> InvokeAsync(GetVdcGroupArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVdcGroupResult>("vcd:index/getVdcGroup:getVdcGroup", args ?? new GetVdcGroupArgs(), options.WithDefaults());

        public static Output<GetVdcGroupResult> Invoke(GetVdcGroupInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetVdcGroupResult>("vcd:index/getVdcGroup:getVdcGroup", args ?? new GetVdcGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVdcGroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("defaultPolicyStatus")]
        public bool? DefaultPolicyStatus { get; set; }

        [Input("description")]
        public string? Description { get; set; }

        [Input("errorMessage")]
        public string? ErrorMessage { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("localEgress")]
        public bool? LocalEgress { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("networkPoolId")]
        public string? NetworkPoolId { get; set; }

        [Input("networkPoolUniversalId")]
        public string? NetworkPoolUniversalId { get; set; }

        [Input("networkProviderType")]
        public string? NetworkProviderType { get; set; }

        [Input("org")]
        public string? Org { get; set; }

        [Input("status")]
        public string? Status { get; set; }

        [Input("type")]
        public string? Type { get; set; }

        [Input("universalNetworkingEnabled")]
        public bool? UniversalNetworkingEnabled { get; set; }

        public GetVdcGroupArgs()
        {
        }
        public static new GetVdcGroupArgs Empty => new GetVdcGroupArgs();
    }

    public sealed class GetVdcGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("defaultPolicyStatus")]
        public Input<bool>? DefaultPolicyStatus { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("errorMessage")]
        public Input<string>? ErrorMessage { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("localEgress")]
        public Input<bool>? LocalEgress { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkPoolId")]
        public Input<string>? NetworkPoolId { get; set; }

        [Input("networkPoolUniversalId")]
        public Input<string>? NetworkPoolUniversalId { get; set; }

        [Input("networkProviderType")]
        public Input<string>? NetworkProviderType { get; set; }

        [Input("org")]
        public Input<string>? Org { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("universalNetworkingEnabled")]
        public Input<bool>? UniversalNetworkingEnabled { get; set; }

        public GetVdcGroupInvokeArgs()
        {
        }
        public static new GetVdcGroupInvokeArgs Empty => new GetVdcGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetVdcGroupResult
    {
        public readonly bool DefaultPolicyStatus;
        public readonly string Description;
        public readonly bool DfwEnabled;
        public readonly string ErrorMessage;
        public readonly string Id;
        public readonly bool LocalEgress;
        public readonly string Name;
        public readonly string NetworkPoolId;
        public readonly string NetworkPoolUniversalId;
        public readonly string NetworkProviderType;
        public readonly string? Org;
        public readonly ImmutableArray<Outputs.GetVdcGroupParticipatingOrgVdcResult> ParticipatingOrgVdcs;
        public readonly string Status;
        public readonly string Type;
        public readonly bool UniversalNetworkingEnabled;

        [OutputConstructor]
        private GetVdcGroupResult(
            bool defaultPolicyStatus,

            string description,

            bool dfwEnabled,

            string errorMessage,

            string id,

            bool localEgress,

            string name,

            string networkPoolId,

            string networkPoolUniversalId,

            string networkProviderType,

            string? org,

            ImmutableArray<Outputs.GetVdcGroupParticipatingOrgVdcResult> participatingOrgVdcs,

            string status,

            string type,

            bool universalNetworkingEnabled)
        {
            DefaultPolicyStatus = defaultPolicyStatus;
            Description = description;
            DfwEnabled = dfwEnabled;
            ErrorMessage = errorMessage;
            Id = id;
            LocalEgress = localEgress;
            Name = name;
            NetworkPoolId = networkPoolId;
            NetworkPoolUniversalId = networkPoolUniversalId;
            NetworkProviderType = networkProviderType;
            Org = org;
            ParticipatingOrgVdcs = participatingOrgVdcs;
            Status = status;
            Type = type;
            UniversalNetworkingEnabled = universalNetworkingEnabled;
        }
    }
}
