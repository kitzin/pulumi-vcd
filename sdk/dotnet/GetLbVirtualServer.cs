// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetLbVirtualServer
    {
        public static Task<GetLbVirtualServerResult> InvokeAsync(GetLbVirtualServerArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLbVirtualServerResult>("vcd:index/getLbVirtualServer:getLbVirtualServer", args ?? new GetLbVirtualServerArgs(), options.WithDefaults());

        public static Output<GetLbVirtualServerResult> Invoke(GetLbVirtualServerInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetLbVirtualServerResult>("vcd:index/getLbVirtualServer:getLbVirtualServer", args ?? new GetLbVirtualServerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLbVirtualServerArgs : global::Pulumi.InvokeArgs
    {
        [Input("edgeGateway", required: true)]
        public string EdgeGateway { get; set; } = null!;

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("org")]
        public string? Org { get; set; }

        [Input("vdc")]
        public string? Vdc { get; set; }

        public GetLbVirtualServerArgs()
        {
        }
        public static new GetLbVirtualServerArgs Empty => new GetLbVirtualServerArgs();
    }

    public sealed class GetLbVirtualServerInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("edgeGateway", required: true)]
        public Input<string> EdgeGateway { get; set; } = null!;

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("org")]
        public Input<string>? Org { get; set; }

        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        public GetLbVirtualServerInvokeArgs()
        {
        }
        public static new GetLbVirtualServerInvokeArgs Empty => new GetLbVirtualServerInvokeArgs();
    }


    [OutputType]
    public sealed class GetLbVirtualServerResult
    {
        public readonly string AppProfileId;
        public readonly ImmutableArray<string> AppRuleIds;
        public readonly int ConnectionLimit;
        public readonly int ConnectionRateLimit;
        public readonly string Description;
        public readonly string EdgeGateway;
        public readonly bool EnableAcceleration;
        public readonly bool Enabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IpAddress;
        public readonly string Name;
        public readonly string? Org;
        public readonly int Port;
        public readonly string Protocol;
        public readonly string ServerPoolId;
        public readonly string? Vdc;

        [OutputConstructor]
        private GetLbVirtualServerResult(
            string appProfileId,

            ImmutableArray<string> appRuleIds,

            int connectionLimit,

            int connectionRateLimit,

            string description,

            string edgeGateway,

            bool enableAcceleration,

            bool enabled,

            string id,

            string ipAddress,

            string name,

            string? org,

            int port,

            string protocol,

            string serverPoolId,

            string? vdc)
        {
            AppProfileId = appProfileId;
            AppRuleIds = appRuleIds;
            ConnectionLimit = connectionLimit;
            ConnectionRateLimit = connectionRateLimit;
            Description = description;
            EdgeGateway = edgeGateway;
            EnableAcceleration = enableAcceleration;
            Enabled = enabled;
            Id = id;
            IpAddress = ipAddress;
            Name = name;
            Org = org;
            Port = port;
            Protocol = protocol;
            ServerPoolId = serverPoolId;
            Vdc = vdc;
        }
    }
}
