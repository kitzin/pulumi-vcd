// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetCatalog
    {
        public static Task<GetCatalogResult> InvokeAsync(GetCatalogArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCatalogResult>("vcd:index/getCatalog:getCatalog", args ?? new GetCatalogArgs(), options.WithDefaults());

        public static Output<GetCatalogResult> Invoke(GetCatalogInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCatalogResult>("vcd:index/getCatalog:getCatalog", args ?? new GetCatalogInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCatalogArgs : global::Pulumi.InvokeArgs
    {
        [Input("description")]
        public string? Description { get; set; }

        [Input("filter")]
        public Inputs.GetCatalogFilterArgs? Filter { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("org")]
        public string? Org { get; set; }

        public GetCatalogArgs()
        {
        }
        public static new GetCatalogArgs Empty => new GetCatalogArgs();
    }

    public sealed class GetCatalogInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("filter")]
        public Input<Inputs.GetCatalogFilterInputArgs>? Filter { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("org")]
        public Input<string>? Org { get; set; }

        public GetCatalogInvokeArgs()
        {
        }
        public static new GetCatalogInvokeArgs Empty => new GetCatalogInvokeArgs();
    }


    [OutputType]
    public sealed class GetCatalogResult
    {
        public readonly bool CacheEnabled;
        public readonly int CatalogVersion;
        public readonly string Created;
        public readonly string Description;
        public readonly Outputs.GetCatalogFilterResult? Filter;
        public readonly string Href;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool IsLocal;
        public readonly bool IsPublished;
        public readonly bool IsShared;
        public readonly ImmutableArray<string> MediaItemLists;
        public readonly ImmutableDictionary<string, object> Metadata;
        public readonly ImmutableArray<Outputs.GetCatalogMetadataEntryResult> MetadataEntries;
        public readonly string? Name;
        public readonly int NumberOfMedia;
        public readonly int NumberOfVappTemplates;
        public readonly string? Org;
        public readonly string OwnerName;
        public readonly bool PreserveIdentityInformation;
        public readonly bool PublishEnabled;
        public readonly string PublishSubscriptionType;
        public readonly string PublishSubscriptionUrl;
        public readonly string StorageProfileId;
        public readonly ImmutableArray<string> VappTemplateLists;

        [OutputConstructor]
        private GetCatalogResult(
            bool cacheEnabled,

            int catalogVersion,

            string created,

            string description,

            Outputs.GetCatalogFilterResult? filter,

            string href,

            string id,

            bool isLocal,

            bool isPublished,

            bool isShared,

            ImmutableArray<string> mediaItemLists,

            ImmutableDictionary<string, object> metadata,

            ImmutableArray<Outputs.GetCatalogMetadataEntryResult> metadataEntries,

            string? name,

            int numberOfMedia,

            int numberOfVappTemplates,

            string? org,

            string ownerName,

            bool preserveIdentityInformation,

            bool publishEnabled,

            string publishSubscriptionType,

            string publishSubscriptionUrl,

            string storageProfileId,

            ImmutableArray<string> vappTemplateLists)
        {
            CacheEnabled = cacheEnabled;
            CatalogVersion = catalogVersion;
            Created = created;
            Description = description;
            Filter = filter;
            Href = href;
            Id = id;
            IsLocal = isLocal;
            IsPublished = isPublished;
            IsShared = isShared;
            MediaItemLists = mediaItemLists;
            Metadata = metadata;
            MetadataEntries = metadataEntries;
            Name = name;
            NumberOfMedia = numberOfMedia;
            NumberOfVappTemplates = numberOfVappTemplates;
            Org = org;
            OwnerName = ownerName;
            PreserveIdentityInformation = preserveIdentityInformation;
            PublishEnabled = publishEnabled;
            PublishSubscriptionType = publishSubscriptionType;
            PublishSubscriptionUrl = publishSubscriptionUrl;
            StorageProfileId = storageProfileId;
            VappTemplateLists = vappTemplateLists;
        }
    }
}
