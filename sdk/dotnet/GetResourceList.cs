// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetResourceList
    {
        public static Task<GetResourceListResult> InvokeAsync(GetResourceListArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetResourceListResult>("vcd:index/getResourceList:getResourceList", args ?? new GetResourceListArgs(), options.WithDefaults());

        public static Output<GetResourceListResult> Invoke(GetResourceListInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetResourceListResult>("vcd:index/getResourceList:getResourceList", args ?? new GetResourceListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourceListArgs : global::Pulumi.InvokeArgs
    {
        [Input("listMode")]
        public string? ListMode { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("nameIdSeparator")]
        public string? NameIdSeparator { get; set; }

        [Input("org")]
        public string? Org { get; set; }

        [Input("parent")]
        public string? Parent { get; set; }

        [Input("resourceType", required: true)]
        public string ResourceType { get; set; } = null!;

        [Input("vdc")]
        public string? Vdc { get; set; }

        public GetResourceListArgs()
        {
        }
        public static new GetResourceListArgs Empty => new GetResourceListArgs();
    }

    public sealed class GetResourceListInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("listMode")]
        public Input<string>? ListMode { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("nameIdSeparator")]
        public Input<string>? NameIdSeparator { get; set; }

        [Input("org")]
        public Input<string>? Org { get; set; }

        [Input("parent")]
        public Input<string>? Parent { get; set; }

        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        public GetResourceListInvokeArgs()
        {
        }
        public static new GetResourceListInvokeArgs Empty => new GetResourceListInvokeArgs();
    }


    [OutputType]
    public sealed class GetResourceListResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ListMode;
        public readonly ImmutableArray<string> Lists;
        public readonly string Name;
        public readonly string? NameIdSeparator;
        public readonly string? Org;
        public readonly string? Parent;
        public readonly string ResourceType;
        public readonly string? Vdc;

        [OutputConstructor]
        private GetResourceListResult(
            string id,

            string? listMode,

            ImmutableArray<string> lists,

            string name,

            string? nameIdSeparator,

            string? org,

            string? parent,

            string resourceType,

            string? vdc)
        {
            Id = id;
            ListMode = listMode;
            Lists = lists;
            Name = name;
            NameIdSeparator = nameIdSeparator;
            Org = org;
            Parent = parent;
            ResourceType = resourceType;
            Vdc = vdc;
        }
    }
}
