// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Vcd
{
    public static class GetStorageProfile
    {
        public static Task<GetStorageProfileResult> InvokeAsync(GetStorageProfileArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetStorageProfileResult>("vcd:index/getStorageProfile:getStorageProfile", args ?? new GetStorageProfileArgs(), options.WithDefaults());

        public static Output<GetStorageProfileResult> Invoke(GetStorageProfileInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetStorageProfileResult>("vcd:index/getStorageProfile:getStorageProfile", args ?? new GetStorageProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStorageProfileArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("org")]
        public string? Org { get; set; }

        [Input("vdc")]
        public string? Vdc { get; set; }

        public GetStorageProfileArgs()
        {
        }
        public static new GetStorageProfileArgs Empty => new GetStorageProfileArgs();
    }

    public sealed class GetStorageProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("org")]
        public Input<string>? Org { get; set; }

        [Input("vdc")]
        public Input<string>? Vdc { get; set; }

        public GetStorageProfileInvokeArgs()
        {
        }
        public static new GetStorageProfileInvokeArgs Empty => new GetStorageProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetStorageProfileResult
    {
        public readonly bool Default;
        public readonly bool Enabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int IopsAllocated;
        public readonly ImmutableArray<Outputs.GetStorageProfileIopsSettingResult> IopsSettings;
        public readonly int Limit;
        public readonly ImmutableDictionary<string, object> Metadata;
        public readonly ImmutableArray<Outputs.GetStorageProfileMetadataEntryResult> MetadataEntries;
        public readonly string Name;
        public readonly string? Org;
        public readonly string Units;
        public readonly int UsedStorage;
        public readonly string? Vdc;

        [OutputConstructor]
        private GetStorageProfileResult(
            bool @default,

            bool enabled,

            string id,

            int iopsAllocated,

            ImmutableArray<Outputs.GetStorageProfileIopsSettingResult> iopsSettings,

            int limit,

            ImmutableDictionary<string, object> metadata,

            ImmutableArray<Outputs.GetStorageProfileMetadataEntryResult> metadataEntries,

            string name,

            string? org,

            string units,

            int usedStorage,

            string? vdc)
        {
            Default = @default;
            Enabled = enabled;
            Id = id;
            IopsAllocated = iopsAllocated;
            IopsSettings = iopsSettings;
            Limit = limit;
            Metadata = metadata;
            MetadataEntries = metadataEntries;
            Name = name;
            Org = org;
            Units = units;
            UsedStorage = usedStorage;
            Vdc = vdc;
        }
    }
}
