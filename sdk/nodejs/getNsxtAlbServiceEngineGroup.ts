// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNsxtAlbServiceEngineGroup(args: GetNsxtAlbServiceEngineGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetNsxtAlbServiceEngineGroupResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("vcd:index/getNsxtAlbServiceEngineGroup:getNsxtAlbServiceEngineGroup", {
        "name": args.name,
        "overallocated": args.overallocated,
        "syncOnRefresh": args.syncOnRefresh,
    }, opts);
}

/**
 * A collection of arguments for invoking getNsxtAlbServiceEngineGroup.
 */
export interface GetNsxtAlbServiceEngineGroupArgs {
    name: string;
    overallocated?: boolean;
    syncOnRefresh?: boolean;
}

/**
 * A collection of values returned by getNsxtAlbServiceEngineGroup.
 */
export interface GetNsxtAlbServiceEngineGroupResult {
    readonly albCloudId: string;
    readonly deployedVirtualServices: number;
    readonly description: string;
    readonly haMode: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly maxVirtualServices: number;
    readonly name: string;
    readonly overallocated?: boolean;
    readonly reservationModel: string;
    readonly reservedVirtualServices: number;
    readonly supportedFeatureSet: string;
    readonly syncOnRefresh?: boolean;
}

export function getNsxtAlbServiceEngineGroupOutput(args: GetNsxtAlbServiceEngineGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNsxtAlbServiceEngineGroupResult> {
    return pulumi.output(args).apply(a => getNsxtAlbServiceEngineGroup(a, opts))
}

/**
 * A collection of arguments for invoking getNsxtAlbServiceEngineGroup.
 */
export interface GetNsxtAlbServiceEngineGroupOutputArgs {
    name: pulumi.Input<string>;
    overallocated?: pulumi.Input<boolean>;
    syncOnRefresh?: pulumi.Input<boolean>;
}
