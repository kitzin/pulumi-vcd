// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getCatalog(args?: GetCatalogArgs, opts?: pulumi.InvokeOptions): Promise<GetCatalogResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("vcd:index/getCatalog:getCatalog", {
        "description": args.description,
        "filter": args.filter,
        "name": args.name,
        "org": args.org,
    }, opts);
}

/**
 * A collection of arguments for invoking getCatalog.
 */
export interface GetCatalogArgs {
    description?: string;
    filter?: inputs.GetCatalogFilter;
    name?: string;
    org?: string;
}

/**
 * A collection of values returned by getCatalog.
 */
export interface GetCatalogResult {
    readonly cacheEnabled: boolean;
    readonly catalogVersion: number;
    readonly created: string;
    readonly description: string;
    readonly filter?: outputs.GetCatalogFilter;
    readonly href: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isLocal: boolean;
    readonly isPublished: boolean;
    readonly isShared: boolean;
    readonly mediaItemLists: string[];
    /**
     * @deprecated Use metadata_entry instead
     */
    readonly metadata: {[key: string]: any};
    readonly metadataEntries: outputs.GetCatalogMetadataEntry[];
    readonly name?: string;
    readonly numberOfMedia: number;
    readonly numberOfVappTemplates: number;
    readonly org?: string;
    readonly ownerName: string;
    readonly preserveIdentityInformation: boolean;
    readonly publishEnabled: boolean;
    readonly publishSubscriptionType: string;
    readonly publishSubscriptionUrl: string;
    readonly storageProfileId: string;
    readonly vappTemplateLists: string[];
}

export function getCatalogOutput(args?: GetCatalogOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCatalogResult> {
    return pulumi.output(args).apply(a => getCatalog(a, opts))
}

/**
 * A collection of arguments for invoking getCatalog.
 */
export interface GetCatalogOutputArgs {
    description?: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetCatalogFilterArgs>;
    name?: pulumi.Input<string>;
    org?: pulumi.Input<string>;
}
