// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrgUser(args?: GetOrgUserArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgUserResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("vcd:index/getOrgUser:getOrgUser", {
        "name": args.name,
        "org": args.org,
        "userId": args.userId,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrgUser.
 */
export interface GetOrgUserArgs {
    name?: string;
    org?: string;
    userId?: string;
}

/**
 * A collection of values returned by getOrgUser.
 */
export interface GetOrgUserResult {
    readonly deployedVmQuota: number;
    readonly description: string;
    readonly emailAddress: string;
    readonly enabled: boolean;
    readonly fullName: string;
    readonly groupNames: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instantMessaging: string;
    readonly isExternal: boolean;
    readonly isGroupRole: boolean;
    readonly isLocked: boolean;
    readonly name?: string;
    readonly org?: string;
    readonly providerType: string;
    readonly role: string;
    readonly storedVmQuota: number;
    readonly telephone: string;
    readonly userId?: string;
}

export function getOrgUserOutput(args?: GetOrgUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgUserResult> {
    return pulumi.output(args).apply(a => getOrgUser(a, opts))
}

/**
 * A collection of arguments for invoking getOrgUser.
 */
export interface GetOrgUserOutputArgs {
    name?: pulumi.Input<string>;
    org?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
}
