// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getOrg(args: GetOrgArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("vcd:index/getOrg:getOrg", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrg.
 */
export interface GetOrgArgs {
    name: string;
}

/**
 * A collection of values returned by getOrg.
 */
export interface GetOrgResult {
    readonly canPublishCatalogs: boolean;
    readonly canPublishExternalCatalogs: boolean;
    readonly canSubscribeExternalCatalogs: boolean;
    readonly delayAfterPowerOnSeconds: number;
    readonly deployedVmQuota: number;
    readonly description: string;
    readonly fullName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isEnabled: boolean;
    /**
     * @deprecated Use metadata_entry instead
     */
    readonly metadata: {[key: string]: any};
    readonly metadataEntries: outputs.GetOrgMetadataEntry[];
    readonly name: string;
    readonly storedVmQuota: number;
    readonly vappLeases: outputs.GetOrgVappLease[];
    readonly vappTemplateLeases: outputs.GetOrgVappTemplateLease[];
}

export function getOrgOutput(args: GetOrgOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgResult> {
    return pulumi.output(args).apply(a => getOrg(a, opts))
}

/**
 * A collection of arguments for invoking getOrg.
 */
export interface GetOrgOutputArgs {
    name: pulumi.Input<string>;
}
